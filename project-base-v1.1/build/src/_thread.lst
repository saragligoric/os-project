GAS LISTING /tmp/ccUgtTCE.s 			page 1


   1              		.file	"_thread.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN7_thread13threadWrapperEv
   9              	_ZN7_thread13threadWrapperEv:
  10              	.LFB47:
  11              		.file 1 "src/_thread.cpp"
   1:src/_thread.cpp **** //
   2:src/_thread.cpp **** // Created by marko on 20.4.22..
   3:src/_thread.cpp **** //
   4:src/_thread.cpp **** 
   5:src/_thread.cpp **** #include "../h/_thread.hpp"
   6:src/_thread.cpp **** #include "../h/riscv.hpp"
   7:src/_thread.cpp **** #include "../h/syscall_c.h"
   8:src/_thread.cpp **** 
   9:src/_thread.cpp **** 
  10:src/_thread.cpp **** _thread *_thread::running = nullptr;
  11:src/_thread.cpp **** _thread *_thread::main = nullptr;
  12:src/_thread.cpp **** 
  13:src/_thread.cpp **** //uint64 TCB::timeSliceCounter = 0;
  14:src/_thread.cpp **** 
  15:src/_thread.cpp **** //_thread *_thread::createThread(Body body)
  16:src/_thread.cpp **** //{
  17:src/_thread.cpp **** //    return new TCB(body, //TIME_SLICE);
  18:src/_thread.cpp **** //}
  19:src/_thread.cpp **** 
  20:src/_thread.cpp **** _thread *_thread::createThread(Body body, void* arg, uint64* stack)
  21:src/_thread.cpp **** {
  22:src/_thread.cpp ****     return new _thread(body, arg, stack);
  23:src/_thread.cpp **** }
  24:src/_thread.cpp **** 
  25:src/_thread.cpp **** 
  26:src/_thread.cpp **** //ovo je dodatno
  27:src/_thread.cpp **** _thread *_thread::createThreadSecondApi(Body body, void* arg, uint64* stack){
  28:src/_thread.cpp ****     //fedjica - initThread
  29:src/_thread.cpp ****     //return new _thread(body, arg, stack);
  30:src/_thread.cpp **** 
  31:src/_thread.cpp ****     //Andrijana
  32:src/_thread.cpp ****     //velicina koju saljes alokatoru treba da bude u bajtovima, ali zaokruzena na cele blokove
  33:src/_thread.cpp ****     //proveri da li si lepo prosledila velicinu
  34:src/_thread.cpp ****     size_t wantedSize = (sizeof(_thread)+MEM_BLOCK_SIZE-1)/MEM_BLOCK_SIZE;
  35:src/_thread.cpp ****     _thread* t = (_thread*)MemoryAllocator::mem_alloc(wantedSize*MEM_BLOCK_SIZE);
  36:src/_thread.cpp **** 
  37:src/_thread.cpp ****     t->setBody(body);
  38:src/_thread.cpp ****     //t->body =body;
  39:src/_thread.cpp ****     t->setArg(arg);
  40:src/_thread.cpp ****     //t->arg=arg;
  41:src/_thread.cpp ****     t->setStack(stack);
  42:src/_thread.cpp ****     //t->stack=stack;
  43:src/_thread.cpp ****     t->setFinished(false);
  44:src/_thread.cpp ****     //t->finished=false;
  45:src/_thread.cpp ****     t->setFlag(false);
  46:src/_thread.cpp ****     //t->flag = false;
  47:src/_thread.cpp **** 
GAS LISTING /tmp/ccUgtTCE.s 			page 2


  48:src/_thread.cpp ****     if (body!=nullptr){
  49:src/_thread.cpp ****         t->context={(uint64) &threadWrapper,(uint64) &(t->stack[STACK_SIZE])};  //STACK_SIZE ili DE
  50:src/_thread.cpp ****     }else{
  51:src/_thread.cpp ****         t->context={0,0};
  52:src/_thread.cpp ****     }
  53:src/_thread.cpp **** 
  54:src/_thread.cpp ****     return t;
  55:src/_thread.cpp **** 
  56:src/_thread.cpp **** }
  57:src/_thread.cpp **** 
  58:src/_thread.cpp **** 
  59:src/_thread.cpp **** int _thread::start(){
  60:src/_thread.cpp ****     if (this!=main){
  61:src/_thread.cpp ****         Scheduler::put(this);
  62:src/_thread.cpp ****     }
  63:src/_thread.cpp ****     return 0;
  64:src/_thread.cpp **** }
  65:src/_thread.cpp **** 
  66:src/_thread.cpp **** //void _thread::yield()
  67:src/_thread.cpp **** //{
  68:src/_thread.cpp **** //    __asm__ volatile ("ecall");
  69:src/_thread.cpp **** //}
  70:src/_thread.cpp **** 
  71:src/_thread.cpp **** void _thread::yield()
  72:src/_thread.cpp **** {
  73:src/_thread.cpp ****     dispatch();
  74:src/_thread.cpp **** }
  75:src/_thread.cpp **** 
  76:src/_thread.cpp **** //void _thread::dispatch()
  77:src/_thread.cpp **** //{
  78:src/_thread.cpp **** //    _thread *old = running;
  79:src/_thread.cpp **** //    if (!old->isFinished()) { Scheduler::put(old); }
  80:src/_thread.cpp **** //    running = Scheduler::get();
  81:src/_thread.cpp **** //
  82:src/_thread.cpp **** //    _thread::contextSwitch(&old->context, &running->context);
  83:src/_thread.cpp **** //}
  84:src/_thread.cpp **** 
  85:src/_thread.cpp **** void _thread::dispatch()
  86:src/_thread.cpp **** {
  87:src/_thread.cpp ****     _thread *old = running;
  88:src/_thread.cpp ****     if (!old->isFinished() && !old->flag) { Scheduler::put(old); }
  89:src/_thread.cpp ****     running = Scheduler::get();
  90:src/_thread.cpp ****     //running = Scheduler::get();
  91:src/_thread.cpp **** 
  92:src/_thread.cpp ****     if (running == nullptr){
  93:src/_thread.cpp ****         running = main;
  94:src/_thread.cpp ****     }
  95:src/_thread.cpp **** 
  96:src/_thread.cpp ****     if (running == main){
  97:src/_thread.cpp ****         running->setFinished(true);
  98:src/_thread.cpp ****     }else{
  99:src/_thread.cpp ****         //ne vidim sto je ovo potrebno
 100:src/_thread.cpp ****         //Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 101:src/_thread.cpp ****     }
 102:src/_thread.cpp **** 
 103:src/_thread.cpp ****     contextSwitch(&old->context, &running->context);
 104:src/_thread.cpp **** }
GAS LISTING /tmp/ccUgtTCE.s 			page 3


 105:src/_thread.cpp **** 
 106:src/_thread.cpp **** //void _thread::threadWrapper()
 107:src/_thread.cpp **** //{
 108:src/_thread.cpp **** //    Riscv::popSppSpie();
 109:src/_thread.cpp **** //    running->body();
 110:src/_thread.cpp **** 
 111:src/_thread.cpp **** //    running->setFinished(true);
 112:src/_thread.cpp **** //    _thread::yield();
 113:src/_thread.cpp **** //}
 114:src/_thread.cpp **** 
 115:src/_thread.cpp **** void _thread::threadWrapper(){
  12              		.loc 1 115 30
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
 116:src/_thread.cpp ****     Riscv::popSppSpie();
  22              		.loc 1 116 5
  23              		.loc 1 116 22 is_stmt 0
  24 0010 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  24      E7800000 
  25              	.LVL0:
 117:src/_thread.cpp ****     running->body(running->arg);
  26              		.loc 1 117 5 is_stmt 1
  27              		.loc 1 117 14 is_stmt 0
  28 0018 97070000 		ld	a5,.LANCHOR0
  28      83B70700 
  29 0020 03B70700 		ld	a4,0(a5)
  30              		.loc 1 117 18
  31 0024 03B58700 		ld	a0,8(a5)
  32 0028 E7000700 		jalr	a4
  33              	.LVL1:
 118:src/_thread.cpp ****     //iz njegovog gornjeg wrappera sledi da bi exit trebalo da setuje finished status i da uradi di
 119:src/_thread.cpp ****     thread_exit();
  34              		.loc 1 119 5 is_stmt 1
  35              		.loc 1 119 16 is_stmt 0
  36 002c 97000000 		call	_Z11thread_exitv@plt
  36      E7800000 
  37              	.LVL2:
 120:src/_thread.cpp **** }
  38              		.loc 1 120 1
  39 0034 83308100 		ld	ra,8(sp)
  40              		.cfi_restore 1
  41 0038 03340100 		ld	s0,0(sp)
  42              		.cfi_restore 8
  43              		.cfi_def_cfa 2, 16
  44 003c 13010101 		addi	sp,sp,16
  45              		.cfi_def_cfa_offset 0
  46 0040 67800000 		jr	ra
  47              		.cfi_endproc
  48              	.LFE47:
  50              		.align	2
GAS LISTING /tmp/ccUgtTCE.s 			page 4


  51              		.globl	_ZN7_thread12createThreadEPFvPvES0_Pm
  53              	_ZN7_thread12createThreadEPFvPvES0_Pm:
  54              	.LFB42:
  21:src/_thread.cpp ****     return new _thread(body, arg, stack);
  55              		.loc 1 21 1 is_stmt 1
  56              		.cfi_startproc
  57              	.LVL3:
  58 0044 130101FD 		addi	sp,sp,-48
  59              		.cfi_def_cfa_offset 48
  60 0048 23341102 		sd	ra,40(sp)
  61 004c 23308102 		sd	s0,32(sp)
  62 0050 233C9100 		sd	s1,24(sp)
  63 0054 23382101 		sd	s2,16(sp)
  64 0058 23343101 		sd	s3,8(sp)
  65              		.cfi_offset 1, -8
  66              		.cfi_offset 8, -16
  67              		.cfi_offset 9, -24
  68              		.cfi_offset 18, -32
  69              		.cfi_offset 19, -40
  70 005c 13040103 		addi	s0,sp,48
  71              		.cfi_def_cfa 8, 0
  72 0060 13090500 		mv	s2,a0
  73 0064 93890500 		mv	s3,a1
  74 0068 93040600 		mv	s1,a2
  22:src/_thread.cpp **** }
  75              		.loc 1 22 5
  76              	.LVL4:
  77              	.LBB23:
  78              	.LBB24:
  79              		.file 2 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by marko on 20.4.22..
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/_thread.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "../lib/mem.h"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** //Thread Control Block
  13:src/../h/_thread.hpp **** class _thread
  14:src/../h/_thread.hpp **** {
  15:src/../h/_thread.hpp **** 
  16:src/../h/_thread.hpp **** 
  17:src/../h/_thread.hpp **** public:
  18:src/../h/_thread.hpp **** //nzm dal je ovo pametno da bude u thread klasi
  19:src/../h/_thread.hpp **** void *operator new(size_t n)
  20:src/../h/_thread.hpp **** {
  21:src/../h/_thread.hpp ****     return __mem_alloc(n);
  80              		.loc 2 21 5
  81              		.loc 2 21 23 is_stmt 0
  82 006c 13050003 		li	a0,48
  83              	.LVL5:
  84 0070 97000000 		call	__mem_alloc@plt
  84      E7800000 
GAS LISTING /tmp/ccUgtTCE.s 			page 5


  85              	.LVL6:
  86              	.LBE24:
  87              	.LBE23:
  88              	.LBB25:
  89              	.LBB26:
  22:src/../h/_thread.hpp **** }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp **** void *operator new[](size_t n)
  25:src/../h/_thread.hpp **** {
  26:src/../h/_thread.hpp ****     return __mem_alloc(n);
  27:src/../h/_thread.hpp **** }
  28:src/../h/_thread.hpp **** 
  29:src/../h/_thread.hpp **** void operator delete(void *p)
  30:src/../h/_thread.hpp **** {
  31:src/../h/_thread.hpp **** __mem_free(p);
  32:src/../h/_thread.hpp **** }
  33:src/../h/_thread.hpp **** 
  34:src/../h/_thread.hpp **** void operator delete[](void *p)
  35:src/../h/_thread.hpp **** {
  36:src/../h/_thread.hpp **** __mem_free(p);
  37:src/../h/_thread.hpp **** }
  38:src/../h/_thread.hpp **** 
  39:src/../h/_thread.hpp **** 
  40:src/../h/_thread.hpp ****     using Body = void (*)(void*);
  41:src/../h/_thread.hpp **** 
  42:src/../h/_thread.hpp ****     ~_thread() { delete[] stack; }
  43:src/../h/_thread.hpp **** 
  44:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  45:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  46:src/../h/_thread.hpp ****     bool isFlag() const {return flag;}
  47:src/../h/_thread.hpp ****     void setFlag(bool flag) {this->flag = flag;}
  48:src/../h/_thread.hpp **** 
  49:src/../h/_thread.hpp ****     //dodatno - nzm dal je sve ovo potrebno
  50:src/../h/_thread.hpp ****     Body getBody() const {return body;}
  51:src/../h/_thread.hpp ****     void setBody(Body body) {this->body = body;}
  52:src/../h/_thread.hpp ****     void* getArg() const {return arg;}
  53:src/../h/_thread.hpp ****     void setArg(void *arg) {this->arg = arg;}
  54:src/../h/_thread.hpp ****     uint64* getStack() const {return stack;}
  55:src/../h/_thread.hpp ****     void setStack(uint64 *stack) {this->stack = stack;}
  56:src/../h/_thread.hpp **** 
  57:src/../h/_thread.hpp ****     //uint64 getTimeSlice() const { return timeSlice; }
  58:src/../h/_thread.hpp **** 
  59:src/../h/_thread.hpp ****     //on je slao samo body; ja dobijam body, arg i stack
  60:src/../h/_thread.hpp ****     //static _thread *createThread(Body body);
  61:src/../h/_thread.hpp **** 
  62:src/../h/_thread.hpp ****     //ovo je dodatno
  63:src/../h/_thread.hpp ****     static _thread* createThreadSecondApi(Body, void*, uint64*);
  64:src/../h/_thread.hpp **** 
  65:src/../h/_thread.hpp **** 
  66:src/../h/_thread.hpp ****     //poziva konstruktor klase _thread
  67:src/../h/_thread.hpp ****     //koristi se u THREAD_CREATE i u THREAD_CREATE_DONT_START
  68:src/../h/_thread.hpp ****     static _thread *createThread(Body, void*, uint64*);
  69:src/../h/_thread.hpp ****     //pokrece nit
  70:src/../h/_thread.hpp ****     //koristi se u THREAD_START i u THREAD_CREATE
  71:src/../h/_thread.hpp ****     int start();
  72:src/../h/_thread.hpp ****     //gasi tekucu nit
  73:src/../h/_thread.hpp ****     //koristi se u THREAD_EXIT
GAS LISTING /tmp/ccUgtTCE.s 			page 6


  74:src/../h/_thread.hpp ****     static int exit();
  75:src/../h/_thread.hpp **** 
  76:src/../h/_thread.hpp ****     //samo poziva dispatch
  77:src/../h/_thread.hpp ****     static void yield();
  78:src/../h/_thread.hpp **** 
  79:src/../h/_thread.hpp ****     static _thread *running;
  80:src/../h/_thread.hpp ****     static _thread *main;
  81:src/../h/_thread.hpp **** 
  82:src/../h/_thread.hpp **** private:
  83:src/../h/_thread.hpp ****     friend class Riscv;
  84:src/../h/_thread.hpp **** 
  85:src/../h/_thread.hpp **** //    _thread(Body body, uint64 timeSlice) :
  86:src/../h/_thread.hpp **** //            body(body),
  87:src/../h/_thread.hpp **** //            stack(body != nullptr ? new uint64[STACK_SIZE] : nullptr),
  88:src/../h/_thread.hpp **** 
  89:src/../h/_thread.hpp **** //            on na vezbama i za main niti stavlja da je ra = &threadWrapper
  90:src/../h/_thread.hpp **** //            context({(uint64) &threadWrapper,
  91:src/../h/_thread.hpp **** //                     stack != nullptr ? (uint64) &stack[STACK_SIZE] : 0
  92:src/../h/_thread.hpp **** //                    }),
  93:src/../h/_thread.hpp **** 
  94:src/../h/_thread.hpp **** //            //timeSlice(timeSlice)
  95:src/../h/_thread.hpp **** //            finished(false)
  96:src/../h/_thread.hpp **** //    {
  97:src/../h/_thread.hpp **** //        if (body != nullptr) { Scheduler::put(this); }
  98:src/../h/_thread.hpp **** //    }
  99:src/../h/_thread.hpp **** 
 100:src/../h/_thread.hpp ****     _thread(Body body, void* arg, uint64* stack) :
 101:src/../h/_thread.hpp ****             body(body),
 102:src/../h/_thread.hpp ****             arg(arg),
 103:src/../h/_thread.hpp ****             stack(stack),
 104:src/../h/_thread.hpp ****             finished(false),
 105:src/../h/_thread.hpp ****             flag(false)
  90              		.loc 2 105 23
  91 0078 23302501 		sd	s2,0(a0)
  92 007c 23343501 		sd	s3,8(a0)
  93 0080 23389500 		sd	s1,16(a0)
  94 0084 23040502 		sb	zero,40(a0)
  95 0088 A3040502 		sb	zero,41(a0)
 106:src/../h/_thread.hpp ****     {
 107:src/../h/_thread.hpp ****         if (body!=nullptr){
  96              		.loc 2 107 9 is_stmt 1
  97 008c 630C0902 		beqz	s2,.L4
 108:src/../h/_thread.hpp ****             context={(uint64) &threadWrapper,(uint64)&stack[STACK_SIZE]};  //STACK_SIZE ili DEFAULT
  98              		.loc 2 108 13
  99              		.loc 2 108 54 is_stmt 0
 100 0090 37260000 		li	a2,8192
 101 0094 B384C400 		add	s1,s1,a2
 102              	.LVL7:
 103              		.loc 2 108 20
 104 0098 97070000 		lla	a5,_ZN7_thread13threadWrapperEv
 104      93870700 
 105 00a0 233CF500 		sd	a5,24(a0)
 106 00a4 23309502 		sd	s1,32(a0)
 107              	.LVL8:
 108              	.L3:
 109              	.LBE26:
 110              	.LBE25:
GAS LISTING /tmp/ccUgtTCE.s 			page 7


  23:src/_thread.cpp **** 
 111              		.loc 1 23 1
 112 00a8 83308102 		ld	ra,40(sp)
 113              		.cfi_remember_state
 114              		.cfi_restore 1
 115 00ac 03340102 		ld	s0,32(sp)
 116              		.cfi_restore 8
 117              		.cfi_def_cfa 2, 48
 118 00b0 83348101 		ld	s1,24(sp)
 119              		.cfi_restore 9
 120 00b4 03390101 		ld	s2,16(sp)
 121              		.cfi_restore 18
 122              	.LVL9:
 123 00b8 83398100 		ld	s3,8(sp)
 124              		.cfi_restore 19
 125              	.LVL10:
 126 00bc 13010103 		addi	sp,sp,48
 127              		.cfi_def_cfa_offset 0
 128 00c0 67800000 		jr	ra
 129              	.LVL11:
 130              	.L4:
 131              		.cfi_restore_state
 132              	.LBB28:
 133              	.LBB27:
 109:src/../h/_thread.hpp ****         }else{
 110:src/../h/_thread.hpp ****             context={0,0};
 134              		.loc 2 110 13 is_stmt 1
 135              		.loc 2 110 20 is_stmt 0
 136 00c4 233C0500 		sd	zero,24(a0)
 137 00c8 23300502 		sd	zero,32(a0)
 138              	.LVL12:
 139              	.LBE27:
 140              	.LBE28:
  22:src/_thread.cpp **** }
 141              		.loc 1 22 40
 142 00cc 6FF0DFFD 		j	.L3
 143              		.cfi_endproc
 144              	.LFE42:
 146              		.align	2
 147              		.globl	_ZN7_thread21createThreadSecondApiEPFvPvES0_Pm
 149              	_ZN7_thread21createThreadSecondApiEPFvPvES0_Pm:
 150              	.LFB43:
  27:src/_thread.cpp ****     //fedjica - initThread
 151              		.loc 1 27 77 is_stmt 1
 152              		.cfi_startproc
 153              	.LVL13:
 154 00d0 130101FD 		addi	sp,sp,-48
 155              		.cfi_def_cfa_offset 48
 156 00d4 23341102 		sd	ra,40(sp)
 157 00d8 23308102 		sd	s0,32(sp)
 158 00dc 233C9100 		sd	s1,24(sp)
 159 00e0 23382101 		sd	s2,16(sp)
 160 00e4 23343101 		sd	s3,8(sp)
 161              		.cfi_offset 1, -8
 162              		.cfi_offset 8, -16
 163              		.cfi_offset 9, -24
 164              		.cfi_offset 18, -32
GAS LISTING /tmp/ccUgtTCE.s 			page 8


 165              		.cfi_offset 19, -40
 166 00e8 13040103 		addi	s0,sp,48
 167              		.cfi_def_cfa 8, 0
 168 00ec 13090500 		mv	s2,a0
 169 00f0 93890500 		mv	s3,a1
 170 00f4 93040600 		mv	s1,a2
  34:src/_thread.cpp ****     _thread* t = (_thread*)MemoryAllocator::mem_alloc(wantedSize*MEM_BLOCK_SIZE);
 171              		.loc 1 34 5
 172              	.LVL14:
  35:src/_thread.cpp **** 
 173              		.loc 1 35 5
  35:src/_thread.cpp **** 
 174              		.loc 1 35 54 is_stmt 0
 175 00f8 13050004 		li	a0,64
 176              	.LVL15:
 177 00fc 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 177      E7800000 
 178              	.LVL16:
  37:src/_thread.cpp ****     //t->body =body;
 179              		.loc 1 37 5 is_stmt 1
 180              	.LBB29:
 181              	.LBB30:
  51:src/../h/_thread.hpp ****     void* getArg() const {return arg;}
 182              		.loc 2 51 30
  51:src/../h/_thread.hpp ****     void* getArg() const {return arg;}
 183              		.loc 2 51 41 is_stmt 0
 184 0104 23302501 		sd	s2,0(a0)
 185              	.LVL17:
 186              	.LBE30:
 187              	.LBE29:
  39:src/_thread.cpp ****     //t->arg=arg;
 188              		.loc 1 39 5 is_stmt 1
 189              	.LBB31:
 190              	.LBB32:
  53:src/../h/_thread.hpp ****     uint64* getStack() const {return stack;}
 191              		.loc 2 53 29
  53:src/../h/_thread.hpp ****     uint64* getStack() const {return stack;}
 192              		.loc 2 53 39 is_stmt 0
 193 0108 23343501 		sd	s3,8(a0)
 194              	.LVL18:
 195              	.LBE32:
 196              	.LBE31:
  41:src/_thread.cpp ****     //t->stack=stack;
 197              		.loc 1 41 5 is_stmt 1
 198              	.LBB33:
 199              	.LBB34:
  55:src/../h/_thread.hpp **** 
 200              		.loc 2 55 35
  55:src/../h/_thread.hpp **** 
 201              		.loc 2 55 47 is_stmt 0
 202 010c 23389500 		sd	s1,16(a0)
 203              	.LVL19:
 204              	.LBE34:
 205              	.LBE33:
  43:src/_thread.cpp ****     //t->finished=false;
 206              		.loc 1 43 5 is_stmt 1
 207              	.LBB35:
GAS LISTING /tmp/ccUgtTCE.s 			page 9


 208              	.LBB36:
  45:src/../h/_thread.hpp ****     bool isFlag() const {return flag;}
 209              		.loc 2 45 36
  45:src/../h/_thread.hpp ****     bool isFlag() const {return flag;}
 210              		.loc 2 45 45 is_stmt 0
 211 0110 23040502 		sb	zero,40(a0)
 212              	.LVL20:
 213              	.LBE36:
 214              	.LBE35:
  45:src/_thread.cpp ****     //t->flag = false;
 215              		.loc 1 45 5 is_stmt 1
 216              	.LBB37:
 217              	.LBB38:
  47:src/../h/_thread.hpp **** 
 218              		.loc 2 47 30
  47:src/../h/_thread.hpp **** 
 219              		.loc 2 47 41 is_stmt 0
 220 0114 A3040502 		sb	zero,41(a0)
 221              	.LVL21:
 222              	.LBE38:
 223              	.LBE37:
  48:src/_thread.cpp ****         t->context={(uint64) &threadWrapper,(uint64) &(t->stack[STACK_SIZE])};  //STACK_SIZE ili DE
 224              		.loc 1 48 5 is_stmt 1
 225 0118 630C0902 		beqz	s2,.L8
  49:src/_thread.cpp ****     }else{
 226              		.loc 1 49 9
  49:src/_thread.cpp ****     }else{
 227              		.loc 1 49 54 is_stmt 0
 228 011c 37260000 		li	a2,8192
 229 0120 B384C400 		add	s1,s1,a2
 230              	.LVL22:
  49:src/_thread.cpp ****     }else{
 231              		.loc 1 49 19
 232 0124 97070000 		lla	a5,_ZN7_thread13threadWrapperEv
 232      93870700 
 233 012c 233CF500 		sd	a5,24(a0)
 234 0130 23309502 		sd	s1,32(a0)
 235              	.L7:
  56:src/_thread.cpp **** 
 236              		.loc 1 56 1
 237 0134 83308102 		ld	ra,40(sp)
 238              		.cfi_remember_state
 239              		.cfi_restore 1
 240 0138 03340102 		ld	s0,32(sp)
 241              		.cfi_restore 8
 242              		.cfi_def_cfa 2, 48
 243 013c 83348101 		ld	s1,24(sp)
 244              		.cfi_restore 9
 245 0140 03390101 		ld	s2,16(sp)
 246              		.cfi_restore 18
 247              	.LVL23:
 248 0144 83398100 		ld	s3,8(sp)
 249              		.cfi_restore 19
 250              	.LVL24:
 251 0148 13010103 		addi	sp,sp,48
 252              		.cfi_def_cfa_offset 0
 253 014c 67800000 		jr	ra
GAS LISTING /tmp/ccUgtTCE.s 			page 10


 254              	.LVL25:
 255              	.L8:
 256              		.cfi_restore_state
  51:src/_thread.cpp ****     }
 257              		.loc 1 51 9 is_stmt 1
  51:src/_thread.cpp ****     }
 258              		.loc 1 51 19 is_stmt 0
 259 0150 233C0500 		sd	zero,24(a0)
 260 0154 23300502 		sd	zero,32(a0)
  54:src/_thread.cpp **** 
 261              		.loc 1 54 5 is_stmt 1
  54:src/_thread.cpp **** 
 262              		.loc 1 54 12 is_stmt 0
 263 0158 6FF0DFFD 		j	.L7
 264              		.cfi_endproc
 265              	.LFE43:
 267              		.align	2
 268              		.globl	_ZN7_thread5startEv
 270              	_ZN7_thread5startEv:
 271              	.LFB44:
  59:src/_thread.cpp ****     if (this!=main){
 272              		.loc 1 59 21 is_stmt 1
 273              		.cfi_startproc
 274              	.LVL26:
  60:src/_thread.cpp ****         Scheduler::put(this);
 275              		.loc 1 60 5
  60:src/_thread.cpp ****         Scheduler::put(this);
 276              		.loc 1 60 13 is_stmt 0
 277 015c 97070000 		ld	a5,.LANCHOR0+8
 277      83B70700 
  60:src/_thread.cpp ****         Scheduler::put(this);
 278              		.loc 1 60 5
 279 0164 6388A702 		beq	a5,a0,.L14
  59:src/_thread.cpp ****     if (this!=main){
 280              		.loc 1 59 21
 281 0168 130101FF 		addi	sp,sp,-16
 282              		.cfi_def_cfa_offset 16
 283 016c 23341100 		sd	ra,8(sp)
 284 0170 23308100 		sd	s0,0(sp)
 285              		.cfi_offset 1, -8
 286              		.cfi_offset 8, -16
 287 0174 13040101 		addi	s0,sp,16
 288              		.cfi_def_cfa 8, 0
  61:src/_thread.cpp ****     }
 289              		.loc 1 61 9 is_stmt 1
  61:src/_thread.cpp ****     }
 290              		.loc 1 61 23 is_stmt 0
 291 0178 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 291      E7800000 
 292              	.LVL27:
  63:src/_thread.cpp **** }
 293              		.loc 1 63 5 is_stmt 1
  64:src/_thread.cpp **** 
 294              		.loc 1 64 1 is_stmt 0
 295 0180 13050000 		li	a0,0
 296 0184 83308100 		ld	ra,8(sp)
 297              		.cfi_restore 1
GAS LISTING /tmp/ccUgtTCE.s 			page 11


 298 0188 03340100 		ld	s0,0(sp)
 299              		.cfi_restore 8
 300              		.cfi_def_cfa 2, 16
 301 018c 13010101 		addi	sp,sp,16
 302              		.cfi_def_cfa_offset 0
 303 0190 67800000 		jr	ra
 304              	.LVL28:
 305              	.L14:
  63:src/_thread.cpp **** }
 306              		.loc 1 63 5 is_stmt 1
  64:src/_thread.cpp **** 
 307              		.loc 1 64 1 is_stmt 0
 308 0194 13050000 		li	a0,0
 309              	.LVL29:
 310 0198 67800000 		ret
 311              		.cfi_endproc
 312              	.LFE44:
 314              		.align	2
 315              		.globl	_ZN7_thread8dispatchEv
 317              	_ZN7_thread8dispatchEv:
 318              	.LFB46:
  86:src/_thread.cpp ****     _thread *old = running;
 319              		.loc 1 86 1 is_stmt 1
 320              		.cfi_startproc
 321 019c 130101FE 		addi	sp,sp,-32
 322              		.cfi_def_cfa_offset 32
 323 01a0 233C1100 		sd	ra,24(sp)
 324 01a4 23388100 		sd	s0,16(sp)
 325 01a8 23349100 		sd	s1,8(sp)
 326              		.cfi_offset 1, -8
 327              		.cfi_offset 8, -16
 328              		.cfi_offset 9, -24
 329 01ac 13040102 		addi	s0,sp,32
 330              		.cfi_def_cfa 8, 0
  87:src/_thread.cpp ****     if (!old->isFinished() && !old->flag) { Scheduler::put(old); }
 331              		.loc 1 87 5
  87:src/_thread.cpp ****     if (!old->isFinished() && !old->flag) { Scheduler::put(old); }
 332              		.loc 1 87 14 is_stmt 0
 333 01b0 97040000 		ld	s1,.LANCHOR0
 333      83B40400 
 334              	.LVL30:
  88:src/_thread.cpp ****     running = Scheduler::get();
 335              		.loc 1 88 5 is_stmt 1
 336              	.LBB39:
 337              	.LBB40:
  44:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
 338              		.loc 2 44 31
  44:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
 339              		.loc 2 44 38 is_stmt 0
 340 01b8 83C78402 		lbu	a5,40(s1)
 341              	.LVL31:
 342              	.LBE40:
 343              	.LBE39:
  88:src/_thread.cpp ****     running = Scheduler::get();
 344              		.loc 1 88 28
 345 01bc 63960700 		bnez	a5,.L18
  88:src/_thread.cpp ****     running = Scheduler::get();
GAS LISTING /tmp/ccUgtTCE.s 			page 12


 346              		.loc 1 88 37 discriminator 1
 347 01c0 83C79402 		lbu	a5,41(s1)
  88:src/_thread.cpp ****     running = Scheduler::get();
 348              		.loc 1 88 28 discriminator 1
 349 01c4 63880704 		beqz	a5,.L22
 350              	.L18:
  89:src/_thread.cpp ****     //running = Scheduler::get();
 351              		.loc 1 89 5 is_stmt 1
  89:src/_thread.cpp ****     //running = Scheduler::get();
 352              		.loc 1 89 29 is_stmt 0
 353 01c8 97000000 		call	_ZN9Scheduler3getEv@plt
 353      E7800000 
 354              	.LVL32:
  89:src/_thread.cpp ****     //running = Scheduler::get();
 355              		.loc 1 89 13
 356 01d0 97070000 		sd	a0,.LANCHOR0,a5
 356      23B0A700 
  92:src/_thread.cpp ****         running = main;
 357              		.loc 1 92 5 is_stmt 1
 358 01d8 63060504 		beqz	a0,.L23
 359              	.L19:
  96:src/_thread.cpp ****         running->setFinished(true);
 360              		.loc 1 96 5
  96:src/_thread.cpp ****         running->setFinished(true);
 361              		.loc 1 96 17 is_stmt 0
 362 01dc 97070000 		lla	a5,.LANCHOR0
 362      93870700 
 363 01e4 83B50700 		ld	a1,0(a5)
 364 01e8 83B78700 		ld	a5,8(a5)
  96:src/_thread.cpp ****         running->setFinished(true);
 365              		.loc 1 96 5
 366 01ec 6386F504 		beq	a1,a5,.L24
 367              	.L20:
 103:src/_thread.cpp **** }
 368              		.loc 1 103 5 is_stmt 1
 103:src/_thread.cpp **** }
 369              		.loc 1 103 18 is_stmt 0
 370 01f0 93858501 		addi	a1,a1,24
 371 01f4 13858401 		addi	a0,s1,24
 372 01f8 97000000 		call	_ZN7_thread13contextSwitchEPNS_7ContextES1_@plt
 372      E7800000 
 373              	.LVL33:
 104:src/_thread.cpp **** 
 374              		.loc 1 104 1
 375 0200 83308101 		ld	ra,24(sp)
 376              		.cfi_remember_state
 377              		.cfi_restore 1
 378 0204 03340101 		ld	s0,16(sp)
 379              		.cfi_restore 8
 380              		.cfi_def_cfa 2, 32
 381 0208 83348100 		ld	s1,8(sp)
 382              		.cfi_restore 9
 383              	.LVL34:
 384 020c 13010102 		addi	sp,sp,32
 385              		.cfi_def_cfa_offset 0
 386 0210 67800000 		jr	ra
 387              	.LVL35:
GAS LISTING /tmp/ccUgtTCE.s 			page 13


 388              	.L22:
 389              		.cfi_restore_state
  88:src/_thread.cpp ****     running = Scheduler::get();
 390              		.loc 1 88 45 is_stmt 1
  88:src/_thread.cpp ****     running = Scheduler::get();
 391              		.loc 1 88 59 is_stmt 0
 392 0214 13850400 		mv	a0,s1
 393 0218 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 393      E7800000 
 394              	.LVL36:
 395 0220 6FF09FFA 		j	.L18
 396              	.L23:
  93:src/_thread.cpp ****     }
 397              		.loc 1 93 9 is_stmt 1
  93:src/_thread.cpp ****     }
 398              		.loc 1 93 17 is_stmt 0
 399 0224 97070000 		lla	a5,.LANCHOR0
 399      93870700 
 400 022c 03B78700 		ld	a4,8(a5)
 401 0230 23B0E700 		sd	a4,0(a5)
 402 0234 6FF09FFA 		j	.L19
 403              	.L24:
  97:src/_thread.cpp ****     }else{
 404              		.loc 1 97 9 is_stmt 1
 405              	.LVL37:
 406              	.LBB41:
 407              	.LBB42:
  45:src/../h/_thread.hpp ****     bool isFlag() const {return flag;}
 408              		.loc 2 45 36
  45:src/../h/_thread.hpp ****     bool isFlag() const {return flag;}
 409              		.loc 2 45 45 is_stmt 0
 410 0238 93071000 		li	a5,1
 411 023c 2384F502 		sb	a5,40(a1)
  45:src/../h/_thread.hpp ****     bool isFlag() const {return flag;}
 412              		.loc 2 45 54
 413 0240 6FF01FFB 		j	.L20
 414              	.LBE42:
 415              	.LBE41:
 416              		.cfi_endproc
 417              	.LFE46:
 419              		.align	2
 420              		.globl	_ZN7_thread5yieldEv
 422              	_ZN7_thread5yieldEv:
 423              	.LFB45:
  72:src/_thread.cpp ****     dispatch();
 424              		.loc 1 72 1 is_stmt 1
 425              		.cfi_startproc
 426 0244 130101FF 		addi	sp,sp,-16
 427              		.cfi_def_cfa_offset 16
 428 0248 23341100 		sd	ra,8(sp)
 429 024c 23308100 		sd	s0,0(sp)
 430              		.cfi_offset 1, -8
 431              		.cfi_offset 8, -16
 432 0250 13040101 		addi	s0,sp,16
 433              		.cfi_def_cfa 8, 0
  73:src/_thread.cpp **** }
 434              		.loc 1 73 5
GAS LISTING /tmp/ccUgtTCE.s 			page 14


  73:src/_thread.cpp **** }
 435              		.loc 1 73 13 is_stmt 0
 436 0254 97000000 		call	_ZN7_thread8dispatchEv
 436      E7800000 
 437              	.LVL38:
  74:src/_thread.cpp **** 
 438              		.loc 1 74 1
 439 025c 83308100 		ld	ra,8(sp)
 440              		.cfi_restore 1
 441 0260 03340100 		ld	s0,0(sp)
 442              		.cfi_restore 8
 443              		.cfi_def_cfa 2, 16
 444 0264 13010101 		addi	sp,sp,16
 445              		.cfi_def_cfa_offset 0
 446 0268 67800000 		jr	ra
 447              		.cfi_endproc
 448              	.LFE45:
 450              		.align	2
 451              		.globl	_ZN7_thread4exitEv
 453              	_ZN7_thread4exitEv:
 454              	.LFB48:
 121:src/_thread.cpp **** 
 122:src/_thread.cpp **** int _thread::exit(){
 455              		.loc 1 122 20 is_stmt 1
 456              		.cfi_startproc
 457 026c 130101FF 		addi	sp,sp,-16
 458              		.cfi_def_cfa_offset 16
 459 0270 23341100 		sd	ra,8(sp)
 460 0274 23308100 		sd	s0,0(sp)
 461              		.cfi_offset 1, -8
 462              		.cfi_offset 8, -16
 463 0278 13040101 		addi	s0,sp,16
 464              		.cfi_def_cfa 8, 0
 123:src/_thread.cpp ****     running->setFinished(true);
 465              		.loc 1 123 5
 466              	.LVL39:
 467              	.LBB43:
 468              	.LBB44:
  45:src/../h/_thread.hpp ****     bool isFlag() const {return flag;}
 469              		.loc 2 45 36
  45:src/../h/_thread.hpp ****     bool isFlag() const {return flag;}
 470              		.loc 2 45 45 is_stmt 0
 471 027c 97070000 		ld	a5,.LANCHOR0
 471      83B70700 
 472 0284 13071000 		li	a4,1
 473 0288 2384E702 		sb	a4,40(a5)
 474              	.LVL40:
 475              	.LBE44:
 476              	.LBE43:
 124:src/_thread.cpp ****     yield();
 477              		.loc 1 124 5 is_stmt 1
 478              		.loc 1 124 10 is_stmt 0
 479 028c 97000000 		call	_ZN7_thread5yieldEv
 479      E7800000 
 480              	.LVL41:
 125:src/_thread.cpp ****     return 0;
 481              		.loc 1 125 5 is_stmt 1
GAS LISTING /tmp/ccUgtTCE.s 			page 15


 126:src/_thread.cpp **** }
 482              		.loc 1 126 1 is_stmt 0
 483 0294 13050000 		li	a0,0
 484 0298 83308100 		ld	ra,8(sp)
 485              		.cfi_restore 1
 486 029c 03340100 		ld	s0,0(sp)
 487              		.cfi_restore 8
 488              		.cfi_def_cfa 2, 16
 489 02a0 13010101 		addi	sp,sp,16
 490              		.cfi_def_cfa_offset 0
 491 02a4 67800000 		jr	ra
 492              		.cfi_endproc
 493              	.LFE48:
 495              		.globl	_ZN7_thread4mainE
 496              		.globl	_ZN7_thread7runningE
 497              		.bss
 498              		.align	3
 499              		.set	.LANCHOR0,. + 0
 502              	_ZN7_thread7runningE:
 503 0000 00000000 		.zero	8
 503      00000000 
 506              	_ZN7_thread4mainE:
 507 0008 00000000 		.zero	8
 507      00000000 
 508              		.text
 509              	.Letext0:
 510              		.file 3 "src/../h/../lib/hw.h"
 511              		.file 4 "src/../h/Structure.hpp"
 512              		.file 5 "src/../h/MemoryAllocator.h"
 513              		.file 6 "src/../h/scheduler.hpp"
 514              		.file 7 "src/../h/riscv.hpp"
 515              		.file 8 "src/../h/syscall_c.h"
 516              		.file 9 "src/../h/../lib/mem.h"
GAS LISTING /tmp/ccUgtTCE.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 _thread.cpp
     /tmp/ccUgtTCE.s:9      .text:0000000000000000 _ZN7_thread13threadWrapperEv
     /tmp/ccUgtTCE.s:13     .text:0000000000000000 .L0 
     /tmp/ccUgtTCE.s:14     .text:0000000000000000 .L0 
     /tmp/ccUgtTCE.s:15     .text:0000000000000004 .L0 
     /tmp/ccUgtTCE.s:18     .text:000000000000000c .L0 
     /tmp/ccUgtTCE.s:19     .text:000000000000000c .L0 
     /tmp/ccUgtTCE.s:21     .text:0000000000000010 .L0 
     /tmp/ccUgtTCE.s:23     .text:0000000000000010 .L0 
     /tmp/ccUgtTCE.s:24     .text:0000000000000010 .L0 
     /tmp/ccUgtTCE.s:27     .text:0000000000000018 .L0 
     /tmp/ccUgtTCE.s:28     .text:0000000000000018 .L0 
     /tmp/ccUgtTCE.s:31     .text:0000000000000024 .L0 
     /tmp/ccUgtTCE.s:35     .text:000000000000002c .L0 
     /tmp/ccUgtTCE.s:36     .text:000000000000002c .L0 
     /tmp/ccUgtTCE.s:39     .text:0000000000000034 .L0 
     /tmp/ccUgtTCE.s:40     .text:0000000000000038 .L0 
     /tmp/ccUgtTCE.s:42     .text:000000000000003c .L0 
     /tmp/ccUgtTCE.s:43     .text:000000000000003c .L0 
     /tmp/ccUgtTCE.s:45     .text:0000000000000040 .L0 
     /tmp/ccUgtTCE.s:47     .text:0000000000000044 .L0 
     /tmp/ccUgtTCE.s:53     .text:0000000000000044 _ZN7_thread12createThreadEPFvPvES0_Pm
     /tmp/ccUgtTCE.s:56     .text:0000000000000044 .L0 
     /tmp/ccUgtTCE.s:58     .text:0000000000000044 .L0 
     /tmp/ccUgtTCE.s:59     .text:0000000000000048 .L0 
     /tmp/ccUgtTCE.s:65     .text:000000000000005c .L0 
     /tmp/ccUgtTCE.s:66     .text:000000000000005c .L0 
     /tmp/ccUgtTCE.s:67     .text:000000000000005c .L0 
     /tmp/ccUgtTCE.s:68     .text:000000000000005c .L0 
     /tmp/ccUgtTCE.s:69     .text:000000000000005c .L0 
     /tmp/ccUgtTCE.s:71     .text:0000000000000060 .L0 
     /tmp/ccUgtTCE.s:80     .text:000000000000006c .L0 
     /tmp/ccUgtTCE.s:81     .text:000000000000006c .L0 
     /tmp/ccUgtTCE.s:82     .text:000000000000006c .L0 
     /tmp/ccUgtTCE.s:91     .text:0000000000000078 .L0 
     /tmp/ccUgtTCE.s:97     .text:000000000000008c .L0 
     /tmp/ccUgtTCE.s:99     .text:0000000000000090 .L0 
     /tmp/ccUgtTCE.s:100    .text:0000000000000090 .L0 
     /tmp/ccUgtTCE.s:104    .text:0000000000000098 .L0 
     /tmp/ccUgtTCE.s:112    .text:00000000000000a8 .L0 
     /tmp/ccUgtTCE.s:113    .text:00000000000000ac .L0 
     /tmp/ccUgtTCE.s:114    .text:00000000000000ac .L0 
     /tmp/ccUgtTCE.s:116    .text:00000000000000b0 .L0 
     /tmp/ccUgtTCE.s:117    .text:00000000000000b0 .L0 
     /tmp/ccUgtTCE.s:119    .text:00000000000000b4 .L0 
     /tmp/ccUgtTCE.s:121    .text:00000000000000b8 .L0 
     /tmp/ccUgtTCE.s:124    .text:00000000000000bc .L0 
     /tmp/ccUgtTCE.s:127    .text:00000000000000c0 .L0 
     /tmp/ccUgtTCE.s:131    .text:00000000000000c4 .L0 
     /tmp/ccUgtTCE.s:135    .text:00000000000000c4 .L0 
     /tmp/ccUgtTCE.s:136    .text:00000000000000c4 .L0 
     /tmp/ccUgtTCE.s:142    .text:00000000000000cc .L0 
     /tmp/ccUgtTCE.s:143    .text:00000000000000d0 .L0 
     /tmp/ccUgtTCE.s:149    .text:00000000000000d0 _ZN7_thread21createThreadSecondApiEPFvPvES0_Pm
     /tmp/ccUgtTCE.s:152    .text:00000000000000d0 .L0 
     /tmp/ccUgtTCE.s:154    .text:00000000000000d0 .L0 
GAS LISTING /tmp/ccUgtTCE.s 			page 17


     /tmp/ccUgtTCE.s:155    .text:00000000000000d4 .L0 
     /tmp/ccUgtTCE.s:161    .text:00000000000000e8 .L0 
     /tmp/ccUgtTCE.s:162    .text:00000000000000e8 .L0 
     /tmp/ccUgtTCE.s:163    .text:00000000000000e8 .L0 
     /tmp/ccUgtTCE.s:164    .text:00000000000000e8 .L0 
     /tmp/ccUgtTCE.s:165    .text:00000000000000e8 .L0 
     /tmp/ccUgtTCE.s:167    .text:00000000000000ec .L0 
     /tmp/ccUgtTCE.s:173    .text:00000000000000f8 .L0 
     /tmp/ccUgtTCE.s:174    .text:00000000000000f8 .L0 
     /tmp/ccUgtTCE.s:175    .text:00000000000000f8 .L0 
     /tmp/ccUgtTCE.s:182    .text:0000000000000104 .L0 
     /tmp/ccUgtTCE.s:183    .text:0000000000000104 .L0 
     /tmp/ccUgtTCE.s:184    .text:0000000000000104 .L0 
     /tmp/ccUgtTCE.s:191    .text:0000000000000108 .L0 
     /tmp/ccUgtTCE.s:192    .text:0000000000000108 .L0 
     /tmp/ccUgtTCE.s:193    .text:0000000000000108 .L0 
     /tmp/ccUgtTCE.s:200    .text:000000000000010c .L0 
     /tmp/ccUgtTCE.s:201    .text:000000000000010c .L0 
     /tmp/ccUgtTCE.s:202    .text:000000000000010c .L0 
     /tmp/ccUgtTCE.s:209    .text:0000000000000110 .L0 
     /tmp/ccUgtTCE.s:210    .text:0000000000000110 .L0 
     /tmp/ccUgtTCE.s:211    .text:0000000000000110 .L0 
     /tmp/ccUgtTCE.s:218    .text:0000000000000114 .L0 
     /tmp/ccUgtTCE.s:219    .text:0000000000000114 .L0 
     /tmp/ccUgtTCE.s:220    .text:0000000000000114 .L0 
     /tmp/ccUgtTCE.s:225    .text:0000000000000118 .L0 
     /tmp/ccUgtTCE.s:227    .text:000000000000011c .L0 
     /tmp/ccUgtTCE.s:228    .text:000000000000011c .L0 
     /tmp/ccUgtTCE.s:232    .text:0000000000000124 .L0 
     /tmp/ccUgtTCE.s:237    .text:0000000000000134 .L0 
     /tmp/ccUgtTCE.s:238    .text:0000000000000138 .L0 
     /tmp/ccUgtTCE.s:239    .text:0000000000000138 .L0 
     /tmp/ccUgtTCE.s:241    .text:000000000000013c .L0 
     /tmp/ccUgtTCE.s:242    .text:000000000000013c .L0 
     /tmp/ccUgtTCE.s:244    .text:0000000000000140 .L0 
     /tmp/ccUgtTCE.s:246    .text:0000000000000144 .L0 
     /tmp/ccUgtTCE.s:249    .text:0000000000000148 .L0 
     /tmp/ccUgtTCE.s:252    .text:000000000000014c .L0 
     /tmp/ccUgtTCE.s:256    .text:0000000000000150 .L0 
     /tmp/ccUgtTCE.s:258    .text:0000000000000150 .L0 
     /tmp/ccUgtTCE.s:259    .text:0000000000000150 .L0 
     /tmp/ccUgtTCE.s:262    .text:0000000000000158 .L0 
     /tmp/ccUgtTCE.s:263    .text:0000000000000158 .L0 
     /tmp/ccUgtTCE.s:264    .text:000000000000015c .L0 
     /tmp/ccUgtTCE.s:270    .text:000000000000015c _ZN7_thread5startEv
     /tmp/ccUgtTCE.s:273    .text:000000000000015c .L0 
     /tmp/ccUgtTCE.s:275    .text:000000000000015c .L0 
     /tmp/ccUgtTCE.s:276    .text:000000000000015c .L0 
     /tmp/ccUgtTCE.s:277    .text:000000000000015c .L0 
     /tmp/ccUgtTCE.s:279    .text:0000000000000164 .L0 
     /tmp/ccUgtTCE.s:281    .text:0000000000000168 .L0 
     /tmp/ccUgtTCE.s:282    .text:000000000000016c .L0 
     /tmp/ccUgtTCE.s:285    .text:0000000000000174 .L0 
     /tmp/ccUgtTCE.s:286    .text:0000000000000174 .L0 
     /tmp/ccUgtTCE.s:288    .text:0000000000000178 .L0 
     /tmp/ccUgtTCE.s:290    .text:0000000000000178 .L0 
     /tmp/ccUgtTCE.s:291    .text:0000000000000178 .L0 
GAS LISTING /tmp/ccUgtTCE.s 			page 18


     /tmp/ccUgtTCE.s:294    .text:0000000000000180 .L0 
     /tmp/ccUgtTCE.s:295    .text:0000000000000180 .L0 
     /tmp/ccUgtTCE.s:297    .text:0000000000000188 .L0 
     /tmp/ccUgtTCE.s:299    .text:000000000000018c .L0 
     /tmp/ccUgtTCE.s:300    .text:000000000000018c .L0 
     /tmp/ccUgtTCE.s:302    .text:0000000000000190 .L0 
     /tmp/ccUgtTCE.s:307    .text:0000000000000194 .L0 
     /tmp/ccUgtTCE.s:308    .text:0000000000000194 .L0 
     /tmp/ccUgtTCE.s:311    .text:000000000000019c .L0 
     /tmp/ccUgtTCE.s:317    .text:000000000000019c _ZN7_thread8dispatchEv
     /tmp/ccUgtTCE.s:320    .text:000000000000019c .L0 
     /tmp/ccUgtTCE.s:321    .text:000000000000019c .L0 
     /tmp/ccUgtTCE.s:322    .text:00000000000001a0 .L0 
     /tmp/ccUgtTCE.s:326    .text:00000000000001ac .L0 
     /tmp/ccUgtTCE.s:327    .text:00000000000001ac .L0 
     /tmp/ccUgtTCE.s:328    .text:00000000000001ac .L0 
     /tmp/ccUgtTCE.s:330    .text:00000000000001b0 .L0 
     /tmp/ccUgtTCE.s:332    .text:00000000000001b0 .L0 
     /tmp/ccUgtTCE.s:333    .text:00000000000001b0 .L0 
     /tmp/ccUgtTCE.s:338    .text:00000000000001b8 .L0 
     /tmp/ccUgtTCE.s:339    .text:00000000000001b8 .L0 
     /tmp/ccUgtTCE.s:340    .text:00000000000001b8 .L0 
     /tmp/ccUgtTCE.s:345    .text:00000000000001bc .L0 
     /tmp/ccUgtTCE.s:347    .text:00000000000001c0 .L0 
     /tmp/ccUgtTCE.s:349    .text:00000000000001c4 .L0 
     /tmp/ccUgtTCE.s:352    .text:00000000000001c8 .L0 
     /tmp/ccUgtTCE.s:353    .text:00000000000001c8 .L0 
     /tmp/ccUgtTCE.s:356    .text:00000000000001d0 .L0 
     /tmp/ccUgtTCE.s:358    .text:00000000000001d8 .L0 
     /tmp/ccUgtTCE.s:361    .text:00000000000001dc .L0 
     /tmp/ccUgtTCE.s:362    .text:00000000000001dc .L0 
     /tmp/ccUgtTCE.s:366    .text:00000000000001ec .L0 
     /tmp/ccUgtTCE.s:369    .text:00000000000001f0 .L0 
     /tmp/ccUgtTCE.s:370    .text:00000000000001f0 .L0 
     /tmp/ccUgtTCE.s:375    .text:0000000000000200 .L0 
     /tmp/ccUgtTCE.s:376    .text:0000000000000204 .L0 
     /tmp/ccUgtTCE.s:377    .text:0000000000000204 .L0 
     /tmp/ccUgtTCE.s:379    .text:0000000000000208 .L0 
     /tmp/ccUgtTCE.s:380    .text:0000000000000208 .L0 
     /tmp/ccUgtTCE.s:382    .text:000000000000020c .L0 
     /tmp/ccUgtTCE.s:385    .text:0000000000000210 .L0 
     /tmp/ccUgtTCE.s:389    .text:0000000000000214 .L0 
     /tmp/ccUgtTCE.s:391    .text:0000000000000214 .L0 
     /tmp/ccUgtTCE.s:392    .text:0000000000000214 .L0 
     /tmp/ccUgtTCE.s:398    .text:0000000000000224 .L0 
     /tmp/ccUgtTCE.s:399    .text:0000000000000224 .L0 
     /tmp/ccUgtTCE.s:408    .text:0000000000000238 .L0 
     /tmp/ccUgtTCE.s:409    .text:0000000000000238 .L0 
     /tmp/ccUgtTCE.s:410    .text:0000000000000238 .L0 
     /tmp/ccUgtTCE.s:413    .text:0000000000000240 .L0 
     /tmp/ccUgtTCE.s:416    .text:0000000000000244 .L0 
     /tmp/ccUgtTCE.s:422    .text:0000000000000244 _ZN7_thread5yieldEv
     /tmp/ccUgtTCE.s:425    .text:0000000000000244 .L0 
     /tmp/ccUgtTCE.s:426    .text:0000000000000244 .L0 
     /tmp/ccUgtTCE.s:427    .text:0000000000000248 .L0 
     /tmp/ccUgtTCE.s:430    .text:0000000000000250 .L0 
     /tmp/ccUgtTCE.s:431    .text:0000000000000250 .L0 
GAS LISTING /tmp/ccUgtTCE.s 			page 19


     /tmp/ccUgtTCE.s:433    .text:0000000000000254 .L0 
     /tmp/ccUgtTCE.s:435    .text:0000000000000254 .L0 
     /tmp/ccUgtTCE.s:436    .text:0000000000000254 .L0 
     /tmp/ccUgtTCE.s:439    .text:000000000000025c .L0 
     /tmp/ccUgtTCE.s:440    .text:0000000000000260 .L0 
     /tmp/ccUgtTCE.s:442    .text:0000000000000264 .L0 
     /tmp/ccUgtTCE.s:443    .text:0000000000000264 .L0 
     /tmp/ccUgtTCE.s:445    .text:0000000000000268 .L0 
     /tmp/ccUgtTCE.s:447    .text:000000000000026c .L0 
     /tmp/ccUgtTCE.s:453    .text:000000000000026c _ZN7_thread4exitEv
     /tmp/ccUgtTCE.s:456    .text:000000000000026c .L0 
     /tmp/ccUgtTCE.s:457    .text:000000000000026c .L0 
     /tmp/ccUgtTCE.s:458    .text:0000000000000270 .L0 
     /tmp/ccUgtTCE.s:461    .text:0000000000000278 .L0 
     /tmp/ccUgtTCE.s:462    .text:0000000000000278 .L0 
     /tmp/ccUgtTCE.s:464    .text:000000000000027c .L0 
     /tmp/ccUgtTCE.s:469    .text:000000000000027c .L0 
     /tmp/ccUgtTCE.s:470    .text:000000000000027c .L0 
     /tmp/ccUgtTCE.s:471    .text:000000000000027c .L0 
     /tmp/ccUgtTCE.s:478    .text:000000000000028c .L0 
     /tmp/ccUgtTCE.s:479    .text:000000000000028c .L0 
     /tmp/ccUgtTCE.s:482    .text:0000000000000294 .L0 
     /tmp/ccUgtTCE.s:483    .text:0000000000000294 .L0 
     /tmp/ccUgtTCE.s:485    .text:000000000000029c .L0 
     /tmp/ccUgtTCE.s:487    .text:00000000000002a0 .L0 
     /tmp/ccUgtTCE.s:488    .text:00000000000002a0 .L0 
     /tmp/ccUgtTCE.s:490    .text:00000000000002a4 .L0 
     /tmp/ccUgtTCE.s:492    .text:00000000000002a8 .L0 
     /tmp/ccUgtTCE.s:506    .bss:0000000000000008 _ZN7_thread4mainE
     /tmp/ccUgtTCE.s:502    .bss:0000000000000000 _ZN7_thread7runningE
     /tmp/ccUgtTCE.s:499    .bss:0000000000000000 .LANCHOR0
     /tmp/ccUgtTCE.s:517    .text:00000000000002a8 .L0 
     /tmp/ccUgtTCE.s:28     .text:0000000000000018 .L0 
     /tmp/ccUgtTCE.s:104    .text:0000000000000098 .L0 
     /tmp/ccUgtTCE.s:232    .text:0000000000000124 .L0 
     /tmp/ccUgtTCE.s:277    .text:000000000000015c .L0 
     /tmp/ccUgtTCE.s:333    .text:00000000000001b0 .L0 
     /tmp/ccUgtTCE.s:356    .text:00000000000001d0 .L0 
     /tmp/ccUgtTCE.s:362    .text:00000000000001dc .L0 
     /tmp/ccUgtTCE.s:399    .text:0000000000000224 .L0 
     /tmp/ccUgtTCE.s:471    .text:000000000000027c .L0 
     /tmp/ccUgtTCE.s:130    .text:00000000000000c4 .L4
     /tmp/ccUgtTCE.s:108    .text:00000000000000a8 .L3
     /tmp/ccUgtTCE.s:255    .text:0000000000000150 .L8
     /tmp/ccUgtTCE.s:235    .text:0000000000000134 .L7
     /tmp/ccUgtTCE.s:305    .text:0000000000000194 .L14
     /tmp/ccUgtTCE.s:350    .text:00000000000001c8 .L18
     /tmp/ccUgtTCE.s:388    .text:0000000000000214 .L22
     /tmp/ccUgtTCE.s:396    .text:0000000000000224 .L23
     /tmp/ccUgtTCE.s:403    .text:0000000000000238 .L24
     /tmp/ccUgtTCE.s:359    .text:00000000000001dc .L19
     /tmp/ccUgtTCE.s:367    .text:00000000000001f0 .L20
     /tmp/ccUgtTCE.s:1955   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccUgtTCE.s:3496   .debug_str:000000000000077a .LASF141
     /tmp/ccUgtTCE.s:3528   .debug_str:0000000000000910 .LASF142
     /tmp/ccUgtTCE.s:3302   .debug_str:0000000000000143 .LASF143
     /tmp/ccUgtTCE.s:5      .text:0000000000000000 .Ltext0
GAS LISTING /tmp/ccUgtTCE.s 			page 20


     /tmp/ccUgtTCE.s:509    .text:00000000000002a8 .Letext0
     /tmp/ccUgtTCE.s:3256   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccUgtTCE.s:3404   .debug_str:0000000000000488 .LASF0
     /tmp/ccUgtTCE.s:3420   .debug_str:00000000000004da .LASF1
     /tmp/ccUgtTCE.s:3388   .debug_str:0000000000000411 .LASF2
     /tmp/ccUgtTCE.s:3356   .debug_str:00000000000002ff .LASF4
     /tmp/ccUgtTCE.s:3470   .debug_str:0000000000000691 .LASF3
     /tmp/ccUgtTCE.s:3278   .debug_str:0000000000000083 .LASF5
     /tmp/ccUgtTCE.s:3424   .debug_str:00000000000004fe .LASF6
     /tmp/ccUgtTCE.s:3402   .debug_str:0000000000000475 .LASF7
     /tmp/ccUgtTCE.s:3520   .debug_str:00000000000008d0 .LASF8
     /tmp/ccUgtTCE.s:3342   .debug_str:000000000000029b .LASF9
     /tmp/ccUgtTCE.s:3440   .debug_str:000000000000056c .LASF10
     /tmp/ccUgtTCE.s:3502   .debug_str:0000000000000850 .LASF11
     /tmp/ccUgtTCE.s:3280   .debug_str:000000000000008a .LASF12
     /tmp/ccUgtTCE.s:3262   .debug_str:0000000000000024 .LASF13
     /tmp/ccUgtTCE.s:3294   .debug_str:000000000000010e .LASF14
     /tmp/ccUgtTCE.s:3458   .debug_str:000000000000062f .LASF15
     /tmp/ccUgtTCE.s:3304   .debug_str:0000000000000166 .LASF16
     /tmp/ccUgtTCE.s:3512   .debug_str:000000000000088e .LASF20
     /tmp/ccUgtTCE.s:3486   .debug_str:000000000000071d .LASF17
     /tmp/ccUgtTCE.s:3554   .debug_str:00000000000009d8 .LASF18
     /tmp/ccUgtTCE.s:3542   .debug_str:000000000000098d .LASF19
     /tmp/ccUgtTCE.s:3382   .debug_str:00000000000003d1 .LASF33
     /tmp/ccUgtTCE.s:3410   .debug_str:00000000000004a5 .LASF21
     /tmp/ccUgtTCE.s:3500   .debug_str:0000000000000846 .LASF22
     /tmp/ccUgtTCE.s:3472   .debug_str:00000000000006a3 .LASF23
     /tmp/ccUgtTCE.s:3484   .debug_str:00000000000006fc .LASF25
     /tmp/ccUgtTCE.s:3444   .debug_str:0000000000000591 .LASF24
     /tmp/ccUgtTCE.s:3340   .debug_str:000000000000027a .LASF26
     /tmp/ccUgtTCE.s:3430   .debug_str:000000000000052c .LASF75
     /tmp/ccUgtTCE.s:3494   .debug_str:000000000000075e .LASF77
     /tmp/ccUgtTCE.s:3312   .debug_str:00000000000001bd .LASF27
     /tmp/ccUgtTCE.s:3334   .debug_str:0000000000000239 .LASF29
     /tmp/ccUgtTCE.s:3474   .debug_str:00000000000006ad .LASF28
     /tmp/ccUgtTCE.s:3534   .debug_str:000000000000093b .LASF30
     /tmp/ccUgtTCE.s:3318   .debug_str:00000000000001d2 .LASF31
     /tmp/ccUgtTCE.s:3452   .debug_str:00000000000005c8 .LASF32
     /tmp/ccUgtTCE.s:3438   .debug_str:0000000000000562 .LASF34
     /tmp/ccUgtTCE.s:3328   .debug_str:000000000000020d .LASF35
     /tmp/ccUgtTCE.s:3352   .debug_str:00000000000002e3 .LASF144
     /tmp/ccUgtTCE.s:3514   .debug_str:0000000000000896 .LASF145
     /tmp/ccUgtTCE.s:3364   .debug_str:0000000000000333 .LASF146
     /tmp/ccUgtTCE.s:3354   .debug_str:00000000000002f7 .LASF36
     /tmp/ccUgtTCE.s:3268   .debug_str:0000000000000058 .LASF37
     /tmp/ccUgtTCE.s:3536   .debug_str:0000000000000965 .LASF38
     /tmp/ccUgtTCE.s:3462   .debug_str:000000000000064b .LASF39
     /tmp/ccUgtTCE.s:3336   .debug_str:0000000000000263 .LASF40
     /tmp/ccUgtTCE.s:3324   .debug_str:00000000000001f8 .LASF41
     /tmp/ccUgtTCE.s:3478   .debug_str:00000000000006c3 .LASF42
     /tmp/ccUgtTCE.s:3358   .debug_str:0000000000000306 .LASF43
     /tmp/ccUgtTCE.s:3360   .debug_str:0000000000000317 .LASF44
     /tmp/ccUgtTCE.s:3398   .debug_str:0000000000000452 .LASF45
     /tmp/ccUgtTCE.s:3506   .debug_str:0000000000000867 .LASF46
     /tmp/ccUgtTCE.s:3428   .debug_str:000000000000051c .LASF47
     /tmp/ccUgtTCE.s:3426   .debug_str:0000000000000511 .LASF50
     /tmp/ccUgtTCE.s:3384   .debug_str:00000000000003e1 .LASF52
GAS LISTING /tmp/ccUgtTCE.s 			page 21


     /tmp/ccUgtTCE.s:3390   .debug_str:000000000000041f .LASF48
     /tmp/ccUgtTCE.s:3260   .debug_str:0000000000000009 .LASF49
     /tmp/ccUgtTCE.s:3468   .debug_str:000000000000068a .LASF51
     /tmp/ccUgtTCE.s:3442   .debug_str:000000000000057b .LASF53
     /tmp/ccUgtTCE.s:3346   .debug_str:00000000000002bf .LASF54
     /tmp/ccUgtTCE.s:3432   .debug_str:0000000000000531 .LASF55
     /tmp/ccUgtTCE.s:3450   .debug_str:00000000000005c3 .LASF147
     /tmp/ccUgtTCE.s:3498   .debug_str:000000000000083e .LASF56
     /tmp/ccUgtTCE.s:3378   .debug_str:000000000000038e .LASF57
     /tmp/ccUgtTCE.s:3504   .debug_str:000000000000085f .LASF58
     /tmp/ccUgtTCE.s:3266   .debug_str:000000000000003d .LASF59
     /tmp/ccUgtTCE.s:3366   .debug_str:0000000000000341 .LASF60
     /tmp/ccUgtTCE.s:3530   .debug_str:0000000000000920 .LASF61
     /tmp/ccUgtTCE.s:3338   .debug_str:0000000000000273 .LASF62
     /tmp/ccUgtTCE.s:3488   .debug_str:0000000000000722 .LASF63
     /tmp/ccUgtTCE.s:3516   .debug_str:00000000000008b2 .LASF64
     /tmp/ccUgtTCE.s:3454   .debug_str:00000000000005f1 .LASF65
     /tmp/ccUgtTCE.s:3258   .debug_str:0000000000000000 .LASF66
     /tmp/ccUgtTCE.s:3412   .debug_str:00000000000004ae .LASF67
     /tmp/ccUgtTCE.s:3448   .debug_str:00000000000005ad .LASF68
     /tmp/ccUgtTCE.s:3282   .debug_str:000000000000009a .LASF69
     /tmp/ccUgtTCE.s:3370   .debug_str:0000000000000350 .LASF70
     /tmp/ccUgtTCE.s:3456   .debug_str:0000000000000609 .LASF71
     /tmp/ccUgtTCE.s:3418   .debug_str:00000000000004d4 .LASF72
     /tmp/ccUgtTCE.s:3480   .debug_str:00000000000006d3 .LASF73
     /tmp/ccUgtTCE.s:3434   .debug_str:0000000000000547 .LASF74
     /tmp/ccUgtTCE.s:3538   .debug_str:0000000000000972 .LASF97
     /tmp/ccUgtTCE.s:3460   .debug_str:0000000000000645 .LASF76
     /tmp/ccUgtTCE.s:3490   .debug_str:0000000000000738 .LASF78
     /tmp/ccUgtTCE.s:3414   .debug_str:00000000000004c6 .LASF79
     /tmp/ccUgtTCE.s:3290   .debug_str:00000000000000ff .LASF80
     /tmp/ccUgtTCE.s:3394   .debug_str:0000000000000432 .LASF81
     /tmp/ccUgtTCE.s:3316   .debug_str:00000000000001cd .LASF82
     /tmp/ccUgtTCE.s:3296   .debug_str:000000000000011a .LASF83
     /tmp/ccUgtTCE.s:3368   .debug_str:0000000000000348 .LASF84
     /tmp/ccUgtTCE.s:3362   .debug_str:000000000000032a .LASF85
     /tmp/ccUgtTCE.s:3532   .debug_str:0000000000000936 .LASF86
     /tmp/ccUgtTCE.s:3374   .debug_str:0000000000000368 .LASF87
     /tmp/ccUgtTCE.s:3524   .debug_str:00000000000008e7 .LASF89
     /tmp/ccUgtTCE.s:3408   .debug_str:000000000000049c .LASF88
     /tmp/ccUgtTCE.s:3464   .debug_str:000000000000065b .LASF90
     /tmp/ccUgtTCE.s:3300   .debug_str:0000000000000135 .LASF91
     /tmp/ccUgtTCE.s:3380   .debug_str:00000000000003a5 .LASF148
     /tmp/ccUgtTCE.s:3372   .debug_str:000000000000035d .LASF149
     /tmp/ccUgtTCE.s:3326   .debug_str:0000000000000208 .LASF92
     /tmp/ccUgtTCE.s:3416   .debug_str:00000000000004ce .LASF93
     /tmp/ccUgtTCE.s:3508   .debug_str:0000000000000870 .LASF94
     /tmp/ccUgtTCE.s:3548   .debug_str:00000000000009aa .LASF95
     /tmp/ccUgtTCE.s:3264   .debug_str:0000000000000034 .LASF96
     /tmp/ccUgtTCE.s:3482   .debug_str:00000000000006e7 .LASF98
     /tmp/ccUgtTCE.s:3314   .debug_str:00000000000001c4 .LASF99
     /tmp/ccUgtTCE.s:3298   .debug_str:0000000000000120 .LASF100
     /tmp/ccUgtTCE.s:3392   .debug_str:000000000000042b .LASF101
     /tmp/ccUgtTCE.s:3446   .debug_str:000000000000059a .LASF102
     /tmp/ccUgtTCE.s:3522   .debug_str:00000000000008e0 .LASF103
     /tmp/ccUgtTCE.s:3510   .debug_str:000000000000087b .LASF104
     /tmp/ccUgtTCE.s:3332   .debug_str:0000000000000231 .LASF105
GAS LISTING /tmp/ccUgtTCE.s 			page 22


     /tmp/ccUgtTCE.s:3306   .debug_str:000000000000017c .LASF106
     /tmp/ccUgtTCE.s:3540   .debug_str:0000000000000985 .LASF107
     /tmp/ccUgtTCE.s:3348   .debug_str:00000000000002c7 .LASF108
     /tmp/ccUgtTCE.s:3320   .debug_str:00000000000001dc .LASF109
     /tmp/ccUgtTCE.s:3284   .debug_str:00000000000000c9 .LASF110
     /tmp/ccUgtTCE.s:3350   .debug_str:00000000000002db .LASF111
     /tmp/ccUgtTCE.s:3322   .debug_str:00000000000001e4 .LASF112
     /tmp/ccUgtTCE.s:3406   .debug_str:0000000000000495 .LASF113
     /tmp/ccUgtTCE.s:3544   .debug_str:0000000000000992 .LASF114
     /tmp/ccUgtTCE.s:3276   .debug_str:000000000000007c .LASF115
     /tmp/ccUgtTCE.s:3330   .debug_str:000000000000021e .LASF116
     /tmp/ccUgtTCE.s:3396   .debug_str:000000000000044c .LASF117
     /tmp/ccUgtTCE.s:3492   .debug_str:000000000000074c .LASF118
     /tmp/ccUgtTCE.s:3274   .debug_str:0000000000000076 .LASF119
     /tmp/ccUgtTCE.s:3558   .debug_str:00000000000009f7 .LASF120
     /tmp/ccUgtTCE.s:3552   .debug_str:00000000000009cd .LASF121
     /tmp/ccUgtTCE.s:3466   .debug_str:0000000000000672 .LASF122
     /tmp/ccUgtTCE.s:3308   .debug_str:0000000000000190 .LASF123
     /tmp/ccUgtTCE.s:3376   .debug_str:0000000000000376 .LASF124
     /tmp/ccUgtTCE.s:3292   .debug_str:0000000000000104 .LASF125
     /tmp/ccUgtTCE.s:3436   .debug_str:000000000000054c .LASF126
     /tmp/ccUgtTCE.s:3270   .debug_str:0000000000000060 .LASF127
     /tmp/ccUgtTCE.s:3344   .debug_str:00000000000002a9 .LASF128
     /tmp/ccUgtTCE.s:3476   .debug_str:00000000000006b4 .LASF129
     /tmp/ccUgtTCE.s:3286   .debug_str:00000000000000dd .LASF130
     /tmp/ccUgtTCE.s:3518   .debug_str:00000000000008bb .LASF131
     /tmp/ccUgtTCE.s:3310   .debug_str:000000000000019b .LASF132
     /tmp/ccUgtTCE.s:3386   .debug_str:00000000000003fc .LASF133
     /tmp/ccUgtTCE.s:3400   .debug_str:0000000000000463 .LASF134
     /tmp/ccUgtTCE.s:454    .text:000000000000026c .LFB48
     /tmp/ccUgtTCE.s:493    .text:00000000000002a8 .LFE48
     /tmp/ccUgtTCE.s:467    .text:000000000000027c .LBB43
     /tmp/ccUgtTCE.s:476    .text:000000000000028c .LBE43
     /tmp/ccUgtTCE.s:2926   .debug_loc:0000000000000000 .LLST24
     /tmp/ccUgtTCE.s:2934   .debug_loc:0000000000000024 .LLST25
     /tmp/ccUgtTCE.s:480    .text:0000000000000294 .LVL41
     /tmp/ccUgtTCE.s:10     .text:0000000000000000 .LFB47
     /tmp/ccUgtTCE.s:48     .text:0000000000000044 .LFE47
     /tmp/ccUgtTCE.s:25     .text:0000000000000018 .LVL0
     /tmp/ccUgtTCE.s:37     .text:0000000000000034 .LVL2
     /tmp/ccUgtTCE.s:318    .text:000000000000019c .LFB46
     /tmp/ccUgtTCE.s:417    .text:0000000000000244 .LFE46
     /tmp/ccUgtTCE.s:2942   .debug_loc:000000000000004f .LLST22
     /tmp/ccUgtTCE.s:336    .text:00000000000001b8 .LBB39
     /tmp/ccUgtTCE.s:343    .text:00000000000001bc .LBE39
     /tmp/ccUgtTCE.s:2953   .debug_loc:0000000000000085 .LLST23
     /tmp/ccUgtTCE.s:406    .text:0000000000000238 .LBB41
     /tmp/ccUgtTCE.s:415    .text:0000000000000244 .LBE41
     /tmp/ccUgtTCE.s:354    .text:00000000000001d0 .LVL32
     /tmp/ccUgtTCE.s:373    .text:0000000000000200 .LVL33
     /tmp/ccUgtTCE.s:394    .text:0000000000000220 .LVL36
     /tmp/ccUgtTCE.s:423    .text:0000000000000244 .LFB45
     /tmp/ccUgtTCE.s:448    .text:000000000000026c .LFE45
     /tmp/ccUgtTCE.s:437    .text:000000000000025c .LVL38
     /tmp/ccUgtTCE.s:271    .text:000000000000015c .LFB44
     /tmp/ccUgtTCE.s:312    .text:000000000000019c .LFE44
     /tmp/ccUgtTCE.s:3546   .debug_str:00000000000009a5 .LASF136
GAS LISTING /tmp/ccUgtTCE.s 			page 23


     /tmp/ccUgtTCE.s:2960   .debug_loc:00000000000000a8 .LLST21
     /tmp/ccUgtTCE.s:292    .text:0000000000000180 .LVL27
     /tmp/ccUgtTCE.s:150    .text:00000000000000d0 .LFB43
     /tmp/ccUgtTCE.s:265    .text:000000000000015c .LFE43
     /tmp/ccUgtTCE.s:2985   .debug_loc:000000000000010a .LLST8
     /tmp/ccUgtTCE.s:3005   .debug_loc:0000000000000167 .LLST9
     /tmp/ccUgtTCE.s:3025   .debug_loc:00000000000001c4 .LLST10
     /tmp/ccUgtTCE.s:3550   .debug_str:00000000000009c2 .LASF135
     /tmp/ccUgtTCE.s:180    .text:0000000000000104 .LBB29
     /tmp/ccUgtTCE.s:187    .text:0000000000000108 .LBE29
     /tmp/ccUgtTCE.s:3045   .debug_loc:0000000000000221 .LLST11
     /tmp/ccUgtTCE.s:3052   .debug_loc:0000000000000244 .LLST12
     /tmp/ccUgtTCE.s:189    .text:0000000000000108 .LBB31
     /tmp/ccUgtTCE.s:196    .text:000000000000010c .LBE31
     /tmp/ccUgtTCE.s:3059   .debug_loc:0000000000000267 .LLST13
     /tmp/ccUgtTCE.s:3066   .debug_loc:000000000000028a .LLST14
     /tmp/ccUgtTCE.s:198    .text:000000000000010c .LBB33
     /tmp/ccUgtTCE.s:205    .text:0000000000000110 .LBE33
     /tmp/ccUgtTCE.s:3073   .debug_loc:00000000000002ad .LLST15
     /tmp/ccUgtTCE.s:3080   .debug_loc:00000000000002d0 .LLST16
     /tmp/ccUgtTCE.s:207    .text:0000000000000110 .LBB35
     /tmp/ccUgtTCE.s:214    .text:0000000000000114 .LBE35
     /tmp/ccUgtTCE.s:3087   .debug_loc:00000000000002f3 .LLST17
     /tmp/ccUgtTCE.s:3095   .debug_loc:0000000000000317 .LLST18
     /tmp/ccUgtTCE.s:216    .text:0000000000000114 .LBB37
     /tmp/ccUgtTCE.s:223    .text:0000000000000118 .LBE37
     /tmp/ccUgtTCE.s:3102   .debug_loc:000000000000033a .LLST19
     /tmp/ccUgtTCE.s:3110   .debug_loc:000000000000035e .LLST20
     /tmp/ccUgtTCE.s:178    .text:0000000000000104 .LVL16
     /tmp/ccUgtTCE.s:54     .text:0000000000000044 .LFB42
     /tmp/ccUgtTCE.s:144    .text:00000000000000d0 .LFE42
     /tmp/ccUgtTCE.s:3117   .debug_loc:0000000000000381 .LLST0
     /tmp/ccUgtTCE.s:3137   .debug_loc:00000000000003de .LLST1
     /tmp/ccUgtTCE.s:3157   .debug_loc:000000000000043b .LLST2
     /tmp/ccUgtTCE.s:77     .text:000000000000006c .LBB23
     /tmp/ccUgtTCE.s:87     .text:0000000000000078 .LBE23
     /tmp/ccUgtTCE.s:3177   .debug_loc:0000000000000498 .LLST3
     /tmp/ccUgtTCE.s:85     .text:0000000000000078 .LVL6
     /tmp/ccUgtTCE.s:88     .text:0000000000000078 .LBB25
     /tmp/ccUgtTCE.s:3248   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccUgtTCE.s:3186   .debug_loc:00000000000004bd .LLST4
     /tmp/ccUgtTCE.s:3202   .debug_loc:0000000000000507 .LLST5
     /tmp/ccUgtTCE.s:3213   .debug_loc:000000000000053d .LLST6
     /tmp/ccUgtTCE.s:3224   .debug_loc:0000000000000573 .LLST7
     /tmp/ccUgtTCE.s:3556   .debug_str:00000000000009dd .LASF150
     /tmp/ccUgtTCE.s:3288   .debug_str:00000000000000f9 .LASF137
     /tmp/ccUgtTCE.s:3422   .debug_str:00000000000004ed .LASF138
     /tmp/ccUgtTCE.s:3272   .debug_str:000000000000006a .LASF140
     /tmp/ccUgtTCE.s:3526   .debug_str:0000000000000904 .LASF139
     /tmp/ccUgtTCE.s:466    .text:000000000000027c .LVL39
     /tmp/ccUgtTCE.s:474    .text:000000000000028c .LVL40
     /tmp/ccUgtTCE.s:334    .text:00000000000001b8 .LVL30
     /tmp/ccUgtTCE.s:383    .text:000000000000020c .LVL34
     /tmp/ccUgtTCE.s:387    .text:0000000000000214 .LVL35
     /tmp/ccUgtTCE.s:341    .text:00000000000001bc .LVL31
     /tmp/ccUgtTCE.s:274    .text:000000000000015c .LVL26
     /tmp/ccUgtTCE.s:304    .text:0000000000000194 .LVL28
GAS LISTING /tmp/ccUgtTCE.s 			page 24


     /tmp/ccUgtTCE.s:309    .text:0000000000000198 .LVL29
     /tmp/ccUgtTCE.s:153    .text:00000000000000d0 .LVL13
     /tmp/ccUgtTCE.s:176    .text:00000000000000fc .LVL15
     /tmp/ccUgtTCE.s:247    .text:0000000000000144 .LVL23
     /tmp/ccUgtTCE.s:254    .text:0000000000000150 .LVL25
     /tmp/ccUgtTCE.s:250    .text:0000000000000148 .LVL24
     /tmp/ccUgtTCE.s:230    .text:0000000000000124 .LVL22
     /tmp/ccUgtTCE.s:185    .text:0000000000000108 .LVL17
     /tmp/ccUgtTCE.s:194    .text:000000000000010c .LVL18
     /tmp/ccUgtTCE.s:203    .text:0000000000000110 .LVL19
     /tmp/ccUgtTCE.s:212    .text:0000000000000114 .LVL20
     /tmp/ccUgtTCE.s:221    .text:0000000000000118 .LVL21
     /tmp/ccUgtTCE.s:57     .text:0000000000000044 .LVL3
     /tmp/ccUgtTCE.s:83     .text:0000000000000070 .LVL5
     /tmp/ccUgtTCE.s:122    .text:00000000000000b8 .LVL9
     /tmp/ccUgtTCE.s:129    .text:00000000000000c4 .LVL11
     /tmp/ccUgtTCE.s:125    .text:00000000000000bc .LVL10
     /tmp/ccUgtTCE.s:102    .text:0000000000000098 .LVL7
     /tmp/ccUgtTCE.s:76     .text:000000000000006c .LVL4
     /tmp/ccUgtTCE.s:107    .text:00000000000000a8 .LVL8
     /tmp/ccUgtTCE.s:138    .text:00000000000000cc .LVL12
     /tmp/ccUgtTCE.s:518    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccUgtTCE.s:110    .text:00000000000000a8 .LBE25
     /tmp/ccUgtTCE.s:132    .text:00000000000000c4 .LBB28
     /tmp/ccUgtTCE.s:140    .text:00000000000000cc .LBE28

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z11thread_exitv
__mem_alloc
_ZN15MemoryAllocator9mem_allocEm
_ZN9Scheduler3putEP7_thread
_ZN9Scheduler3getEv
_ZN7_thread13contextSwitchEPNS_7ContextES1_
