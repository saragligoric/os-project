GAS LISTING /tmp/ccgcmZUQ.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z12user_wrapperPv
   9              	_Z12user_wrapperPv:
  10              	.LFB42:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** //
   2:src/main.cpp  **** // Created by os on 8/31/22.
   3:src/main.cpp  **** //
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "../h/riscv.hpp"
   6:src/main.cpp  **** #include "../h/MemoryAllocator.h"
   7:src/main.cpp  **** #include "../h/_thread.hpp"
   8:src/main.cpp  **** #include "../h/syscall_c.h"
   9:src/main.cpp  **** #include "../h/print.hpp"
  10:src/main.cpp  **** #include "../lib/mem.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** extern void userMain();
  13:src/main.cpp  **** 
  14:src/main.cpp  **** void user_wrapper(void*){
  12              		.loc 1 14 25
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  15:src/main.cpp  ****     userMain();
  22              		.loc 1 15 5
  23              		.loc 1 15 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
  16:src/main.cpp  ****     _thread::running->setFinished(true);
  26              		.loc 1 16 5 is_stmt 1
  27              		.loc 1 16 34 is_stmt 0
  28 0018 97070000 		la	a5,_ZN7_thread7runningE
  28      83B70700 
  29 0020 83B70700 		ld	a5,0(a5)
  30              	.LVL1:
  31              	.LBB19:
  32              	.LBB20:
  33              		.file 2 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by marko on 20.4.22..
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/_thread.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/_thread.hpp **** 
GAS LISTING /tmp/ccgcmZUQ.s 			page 2


   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "../lib/mem.h"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** //Thread Control Block
  13:src/../h/_thread.hpp **** class _thread
  14:src/../h/_thread.hpp **** {
  15:src/../h/_thread.hpp **** 
  16:src/../h/_thread.hpp **** 
  17:src/../h/_thread.hpp **** public:
  18:src/../h/_thread.hpp **** //nzm dal je ovo pametno da bude u thread klasi
  19:src/../h/_thread.hpp **** void *operator new(size_t n)
  20:src/../h/_thread.hpp **** {
  21:src/../h/_thread.hpp ****     return __mem_alloc(n);
  22:src/../h/_thread.hpp **** }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp **** void *operator new[](size_t n)
  25:src/../h/_thread.hpp **** {
  26:src/../h/_thread.hpp ****     return __mem_alloc(n);
  27:src/../h/_thread.hpp **** }
  28:src/../h/_thread.hpp **** 
  29:src/../h/_thread.hpp **** void operator delete(void *p)
  30:src/../h/_thread.hpp **** {
  31:src/../h/_thread.hpp **** __mem_free(p);
  32:src/../h/_thread.hpp **** }
  33:src/../h/_thread.hpp **** 
  34:src/../h/_thread.hpp **** void operator delete[](void *p)
  35:src/../h/_thread.hpp **** {
  36:src/../h/_thread.hpp **** __mem_free(p);
  37:src/../h/_thread.hpp **** }
  38:src/../h/_thread.hpp **** 
  39:src/../h/_thread.hpp **** 
  40:src/../h/_thread.hpp ****     using Body = void (*)(void*);
  41:src/../h/_thread.hpp **** 
  42:src/../h/_thread.hpp ****     ~_thread() { delete[] stack; }
  43:src/../h/_thread.hpp **** 
  44:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  45:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  34              		.loc 2 45 36 is_stmt 1
  35              		.loc 2 45 45 is_stmt 0
  36 0024 13071000 		li	a4,1
  37 0028 2384E702 		sb	a4,40(a5)
  38              	.LVL2:
  39              	.LBE20:
  40              	.LBE19:
  17:src/main.cpp  ****     _thread::yield();
  41              		.loc 1 17 5 is_stmt 1
  42              		.loc 1 17 19 is_stmt 0
  43 002c 97000000 		call	_ZN7_thread5yieldEv@plt
  43      E7800000 
  44              	.LVL3:
  18:src/main.cpp  **** }
  45              		.loc 1 18 1
  46 0034 83308100 		ld	ra,8(sp)
  47              		.cfi_restore 1
  48 0038 03340100 		ld	s0,0(sp)
  49              		.cfi_restore 8
GAS LISTING /tmp/ccgcmZUQ.s 			page 3


  50              		.cfi_def_cfa 2, 16
  51 003c 13010101 		addi	sp,sp,16
  52              		.cfi_def_cfa_offset 0
  53 0040 67800000 		jr	ra
  54              		.cfi_endproc
  55              	.LFE42:
  57              		.section	.rodata.str1.8,"aMS",@progbits,1
  58              		.align	3
  59              	.LC0:
  60 0000 4D61696E 		.string	"Main thread created\n"
  60      20746872 
  60      65616420 
  60      63726561 
  60      7465640A 
  61 0015 000000   		.align	3
  62              	.LC1:
  63 0018 55736572 		.string	"User main thread created\n"
  63      206D6169 
  63      6E207468 
  63      72656164 
  63      20637265 
  64 0032 00000000 		.align	3
  64      0000
  65              	.LC2:
  66 0038 55736572 		.string	"User main thread finished\n"
  66      206D6169 
  66      6E207468 
  66      72656164 
  66      2066696E 
  67              		.text
  68              		.align	2
  69              		.globl	main
  71              	main:
  72              	.LFB43:
  19:src/main.cpp  **** 
  20:src/main.cpp  **** void main(){
  73              		.loc 1 20 12 is_stmt 1
  74              		.cfi_startproc
  75 0044 130101FE 		addi	sp,sp,-32
  76              		.cfi_def_cfa_offset 32
  77 0048 233C1100 		sd	ra,24(sp)
  78 004c 23388100 		sd	s0,16(sp)
  79 0050 23349100 		sd	s1,8(sp)
  80 0054 23302101 		sd	s2,0(sp)
  81              		.cfi_offset 1, -8
  82              		.cfi_offset 8, -16
  83              		.cfi_offset 9, -24
  84              		.cfi_offset 18, -32
  85 0058 13040102 		addi	s0,sp,32
  86              		.cfi_def_cfa 8, 0
  21:src/main.cpp  ****     MemoryAllocator::init();
  87              		.loc 1 21 5
  88              		.loc 1 21 26 is_stmt 0
  89 005c 97000000 		call	_ZN15MemoryAllocator4initEv@plt
  89      E7800000 
  90              	.LVL4:
  22:src/main.cpp  **** //    Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
GAS LISTING /tmp/ccgcmZUQ.s 			page 4


  23:src/main.cpp  **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  24:src/main.cpp  **** 
  25:src/main.cpp  ****     //pravljenje main i user main niti
  26:src/main.cpp  ****     _thread *threads[2];
  91              		.loc 1 26 5 is_stmt 1
  27:src/main.cpp  **** 
  28:src/main.cpp  ****     //thread_create(&threads[0], nullptr, nullptr);
  29:src/main.cpp  ****     threads[0] = _thread::createThread(nullptr, nullptr, nullptr);
  92              		.loc 1 29 5
  93              		.loc 1 29 39 is_stmt 0
  94 0064 13060000 		li	a2,0
  95 0068 93050000 		li	a1,0
  96 006c 13050000 		li	a0,0
  97 0070 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
  97      E7800000 
  98              	.LVL5:
  99 0078 13090500 		mv	s2,a0
  30:src/main.cpp  ****     _thread::main = _thread::running = threads[0];
 100              		.loc 1 30 5 is_stmt 1
 101              		.loc 1 30 38 is_stmt 0
 102 007c 97070000 		la	a5,_ZN7_thread7runningE
 102      83B70700 
 103 0084 23B0A700 		sd	a0,0(a5)
 104              		.loc 1 30 19
 105 0088 97070000 		la	a5,_ZN7_thread4mainE
 105      83B70700 
 106 0090 23B0A700 		sd	a0,0(a5)
  31:src/main.cpp  ****     _thread::running->setFlag(true);
 107              		.loc 1 31 5 is_stmt 1
 108              	.LVL6:
 109              	.LBB21:
 110              	.LBB22:
  46:src/../h/_thread.hpp ****     bool isFlag() const {return flag;}
  47:src/../h/_thread.hpp ****     void setFlag(bool flag) {this->flag = flag;}
 111              		.loc 2 47 30
 112              		.loc 2 47 41 is_stmt 0
 113 0094 93071000 		li	a5,1
 114 0098 A304F502 		sb	a5,41(a0)
 115              	.LVL7:
 116              	.LBE22:
 117              	.LBE21:
  32:src/main.cpp  ****     printString("Main thread created\n");
 118              		.loc 1 32 5 is_stmt 1
 119              		.loc 1 32 16 is_stmt 0
 120 009c 17050000 		lla	a0,.LC0
 120      13050500 
 121 00a4 97000000 		call	_Z11printStringPKc@plt
 121      E7800000 
 122              	.LVL8:
  33:src/main.cpp  **** 
  34:src/main.cpp  ****     //void* stack = mem_alloc(sizeof(uint64)*DEFAULT_STACK_SIZE);
  35:src/main.cpp  ****     void* stack = __mem_alloc(sizeof(uint64)*DEFAULT_STACK_SIZE);
 123              		.loc 1 35 5 is_stmt 1
 124              		.loc 1 35 30 is_stmt 0
 125 00ac 37850000 		li	a0,32768
 126 00b0 97000000 		call	__mem_alloc@plt
 126      E7800000 
GAS LISTING /tmp/ccgcmZUQ.s 			page 5


 127              	.LVL9:
 128 00b8 13060500 		mv	a2,a0
 129              	.LVL10:
  36:src/main.cpp  ****     //thread_create(&threads[1], user_wrapper, nullptr);
  37:src/main.cpp  ****     threads[1] = _thread::createThread(&user_wrapper, nullptr, (uint64*)stack);
 130              		.loc 1 37 5 is_stmt 1
 131              		.loc 1 37 39 is_stmt 0
 132 00bc 93050000 		li	a1,0
 133 00c0 17050000 		lla	a0,_Z12user_wrapperPv
 133      13050500 
 134              	.LVL11:
 135 00c8 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 135      E7800000 
 136              	.LVL12:
 137 00d0 93040500 		mv	s1,a0
  38:src/main.cpp  ****     printString("User main thread created\n");
 138              		.loc 1 38 5 is_stmt 1
 139              		.loc 1 38 16 is_stmt 0
 140 00d4 17050000 		lla	a0,.LC1
 140      13050500 
 141 00dc 97000000 		call	_Z11printStringPKc@plt
 141      E7800000 
 142              	.LVL13:
  39:src/main.cpp  **** 
  40:src/main.cpp  **** //    Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
  41:src/main.cpp  **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  42:src/main.cpp  **** 
  43:src/main.cpp  ****     //stavlja userMain u scheduler
  44:src/main.cpp  ****     threads[1]->start();
 143              		.loc 1 44 5 is_stmt 1
 144              		.loc 1 44 22 is_stmt 0
 145 00e4 13850400 		mv	a0,s1
 146 00e8 97000000 		call	_ZN7_thread5startEv@plt
 146      E7800000 
 147              	.LVL14:
  45:src/main.cpp  **** 
  46:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
 148              		.loc 1 46 5 is_stmt 1
 149              		.loc 1 46 19 is_stmt 0
 150 00f0 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 150      83B70700 
 151              	.LVL15:
 152              	.LBB23:
 153              	.LBB24:
 154              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
GAS LISTING /tmp/ccgcmZUQ.s 			page 6


  13:src/../h/riscv.hpp ****     //pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  14:src/../h/riscv.hpp ****     static void popSppSpie();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     // read register scause
  17:src/../h/riscv.hpp ****     static uint64 r_scause();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // write register scause
  20:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // read register sepc
  23:src/../h/riscv.hpp ****     static uint64 r_sepc();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // write register sepc
  26:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // read register stvec
  29:src/../h/riscv.hpp ****     static uint64 r_stvec();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // write register stvec
  32:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // read register stval
  35:src/../h/riscv.hpp ****     static uint64 r_stval();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // write register stval
  38:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     enum BitMaskSip
  41:src/../h/riscv.hpp ****     {
  42:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  43:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  44:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  45:src/../h/riscv.hpp ****     };
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     // mask set register sip
  48:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     // mask clear register sip
  51:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     // read register sip
  54:src/../h/riscv.hpp ****     static uint64 r_sip();
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     // write register sip
  57:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     enum BitMaskSstatus
  60:src/../h/riscv.hpp ****     {
  61:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  62:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  63:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  64:src/../h/riscv.hpp ****     };
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // mask set register sstatus
  67:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // mask clear register sstatus
GAS LISTING /tmp/ccgcmZUQ.s 			page 7


  70:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // read register sstatus
  73:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // write register sstatus
  76:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     //za prekidnu rutinu:
  80:src/../h/riscv.hpp ****     // supervisor trap
  81:src/../h/riscv.hpp ****     static void supervisorTrap();
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp **** private:
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     // supervisor trap handler
  86:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** };
  89:src/../h/riscv.hpp **** 
  90:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  91:src/../h/riscv.hpp **** {
  92:src/../h/riscv.hpp ****     uint64 volatile scause;
  93:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  94:src/../h/riscv.hpp ****     return scause;
  95:src/../h/riscv.hpp **** }
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  98:src/../h/riscv.hpp **** {
  99:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 100:src/../h/riscv.hpp **** }
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 103:src/../h/riscv.hpp **** {
 104:src/../h/riscv.hpp ****     uint64 volatile sepc;
 105:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 106:src/../h/riscv.hpp ****     return sepc;
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 110:src/../h/riscv.hpp **** {
 111:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 112:src/../h/riscv.hpp **** }
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 115:src/../h/riscv.hpp **** {
 116:src/../h/riscv.hpp ****     uint64 volatile stvec;
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 118:src/../h/riscv.hpp ****     return stvec;
 119:src/../h/riscv.hpp **** }
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 122:src/../h/riscv.hpp **** {
 123:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 155              		.loc 3 123 5 is_stmt 1
 156              		.loc 3 123 69 is_stmt 0
 157              	#APP
GAS LISTING /tmp/ccgcmZUQ.s 			page 8


 158              	# 123 "src/../h/riscv.hpp" 1
 124              	}
 159              		csrw stvec, a5
 160              	# 0 "" 2
 161              	.LVL16:
 162              	#NO_APP
 163              	.LBE24:
 164              	.LBE23:
  47:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 165              		.loc 1 47 5 is_stmt 1
 166              	.LBB25:
 167              	.LBB26:
 125:src/../h/riscv.hpp **** 
 126:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 127:src/../h/riscv.hpp **** {
 128:src/../h/riscv.hpp ****     uint64 volatile stval;
 129:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 130:src/../h/riscv.hpp ****     return stval;
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 134:src/../h/riscv.hpp **** {
 135:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 136:src/../h/riscv.hpp **** }
 137:src/../h/riscv.hpp **** 
 138:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 139:src/../h/riscv.hpp **** {
 140:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 144:src/../h/riscv.hpp **** {
 145:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 149:src/../h/riscv.hpp **** {
 150:src/../h/riscv.hpp ****     uint64 volatile sip;
 151:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 152:src/../h/riscv.hpp ****     return sip;
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 158:src/../h/riscv.hpp **** }
 159:src/../h/riscv.hpp **** 
 160:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 161:src/../h/riscv.hpp **** {
 162:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 168              		.loc 3 162 5
 169              		.loc 3 162 68 is_stmt 0
 170 00fc 93072000 		li	a5,2
 171              	#APP
 172              	# 162 "src/../h/riscv.hpp" 1
 163              	}
 173              		csrs sstatus, a5
GAS LISTING /tmp/ccgcmZUQ.s 			page 9


 174              	# 0 "" 2
 175              	.LVL17:
 176              	#NO_APP
 177              	.L5:
 178              	.LBE26:
 179              	.LBE25:
  48:src/main.cpp  **** 
  49:src/main.cpp  ****     while(!threads[1]->isFinished()){
 180              		.loc 1 49 5 is_stmt 1
 181              		.loc 1 49 11
 182              	.LBB27:
 183              	.LBB28:
  44:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
 184              		.loc 2 44 31
  44:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
 185              		.loc 2 44 38 is_stmt 0
 186 0104 83C78402 		lbu	a5,40(s1)
 187              	.LVL18:
 188              	.LBE28:
 189              	.LBE27:
 190              		.loc 1 49 11
 191 0108 63980700 		bnez	a5,.L4
  50:src/main.cpp  ****         //_thread::yield();
  51:src/main.cpp  ****         thread_dispatch();
 192              		.loc 1 51 9 is_stmt 1
 193              		.loc 1 51 24 is_stmt 0
 194 010c 97000000 		call	_Z15thread_dispatchv@plt
 194      E7800000 
 195              	.LVL19:
 196 0114 6FF01FFF 		j	.L5
 197              	.L4:
  52:src/main.cpp  ****     }
  53:src/main.cpp  ****     printString("User main thread finished\n");
 198              		.loc 1 53 5 is_stmt 1
 199              		.loc 1 53 16 is_stmt 0
 200 0118 17050000 		lla	a0,.LC2
 200      13050500 
 201 0120 97000000 		call	_Z11printStringPKc@plt
 201      E7800000 
 202              	.LVL20:
  54:src/main.cpp  **** 
  55:src/main.cpp  ****     Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
 203              		.loc 1 55 5 is_stmt 1
 204              	.LBB29:
 205              	.LBB30:
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 166:src/../h/riscv.hpp **** {
 167:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 206              		.loc 3 167 5
 207              		.loc 3 167 68 is_stmt 0
 208 0128 93072000 		li	a5,2
 209              	#APP
 210              	# 167 "src/../h/riscv.hpp" 1
 168              	}
 211              		csrc sstatus, a5
 212              	# 0 "" 2
GAS LISTING /tmp/ccgcmZUQ.s 			page 10


 213              	.LVL21:
 214              	#NO_APP
 215              	.LBE30:
 216              	.LBE29:
  56:src/main.cpp  **** 
  57:src/main.cpp  **** //    for (auto &thread: threads){
  58:src/main.cpp  **** //        delete thread;
  59:src/main.cpp  **** //    }
  60:src/main.cpp  **** 
  61:src/main.cpp  ****     //ovde nesto baguje
  62:src/main.cpp  ****     //delete threads[1];
  63:src/main.cpp  ****     delete threads[0];
 217              		.loc 1 63 5 is_stmt 1
 218              		.loc 1 63 22 is_stmt 0
 219 0130 63000902 		beqz	s2,.L3
 220              	.LVL22:
 221              	.LBB31:
 222              	.LBB32:
  42:src/../h/_thread.hpp **** 
 223              		.loc 2 42 18 is_stmt 1
  42:src/../h/_thread.hpp **** 
 224              		.loc 2 42 27 is_stmt 0
 225 0134 03350901 		ld	a0,16(s2)
  42:src/../h/_thread.hpp **** 
 226              		.loc 2 42 32
 227 0138 63060500 		beqz	a0,.L7
  42:src/../h/_thread.hpp **** 
 228              		.loc 2 42 27
 229 013c 97000000 		call	_ZdaPv@plt
 229      E7800000 
 230              	.LVL23:
 231              	.L7:
 232              	.LBE32:
 233              	.LBE31:
 234              	.LBB33:
 235              	.LBB34:
  31:src/../h/_thread.hpp **** }
 236              		.loc 2 31 1 is_stmt 1
  31:src/../h/_thread.hpp **** }
 237              		.loc 2 31 11 is_stmt 0
 238 0144 13050900 		mv	a0,s2
 239 0148 97000000 		call	__mem_free@plt
 239      E7800000 
 240              	.LVL24:
 241              	.L3:
 242              	.LBE34:
 243              	.LBE33:
  64:src/main.cpp  **** }
 244              		.loc 1 64 1
 245 0150 83308101 		ld	ra,24(sp)
 246              		.cfi_restore 1
 247 0154 03340101 		ld	s0,16(sp)
 248              		.cfi_restore 8
 249              		.cfi_def_cfa 2, 32
 250 0158 83348100 		ld	s1,8(sp)
 251              		.cfi_restore 9
 252 015c 03390100 		ld	s2,0(sp)
GAS LISTING /tmp/ccgcmZUQ.s 			page 11


 253              		.cfi_restore 18
 254 0160 13010102 		addi	sp,sp,32
 255              		.cfi_def_cfa_offset 0
 256 0164 67800000 		jr	ra
 257              		.cfi_endproc
 258              	.LFE43:
 260              	.Letext0:
 261              		.file 4 "src/../h/../lib/hw.h"
 262              		.file 5 "src/../h/Structure.hpp"
 263              		.file 6 "src/../h/MemoryAllocator.h"
 264              		.file 7 "src/../h/../lib/mem.h"
 265              		.file 8 "src/../h/print.hpp"
 266              		.file 9 "src/../h/syscall_c.h"
GAS LISTING /tmp/ccgcmZUQ.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccgcmZUQ.s:9      .text:0000000000000000 _Z12user_wrapperPv
     /tmp/ccgcmZUQ.s:13     .text:0000000000000000 .L0 
     /tmp/ccgcmZUQ.s:14     .text:0000000000000000 .L0 
     /tmp/ccgcmZUQ.s:15     .text:0000000000000004 .L0 
     /tmp/ccgcmZUQ.s:18     .text:000000000000000c .L0 
     /tmp/ccgcmZUQ.s:19     .text:000000000000000c .L0 
     /tmp/ccgcmZUQ.s:21     .text:0000000000000010 .L0 
     /tmp/ccgcmZUQ.s:23     .text:0000000000000010 .L0 
     /tmp/ccgcmZUQ.s:24     .text:0000000000000010 .L0 
     /tmp/ccgcmZUQ.s:27     .text:0000000000000018 .L0 
     /tmp/ccgcmZUQ.s:28     .text:0000000000000018 .L0 
     /tmp/ccgcmZUQ.s:35     .text:0000000000000024 .L0 
     /tmp/ccgcmZUQ.s:36     .text:0000000000000024 .L0 
     /tmp/ccgcmZUQ.s:42     .text:000000000000002c .L0 
     /tmp/ccgcmZUQ.s:43     .text:000000000000002c .L0 
     /tmp/ccgcmZUQ.s:46     .text:0000000000000034 .L0 
     /tmp/ccgcmZUQ.s:47     .text:0000000000000038 .L0 
     /tmp/ccgcmZUQ.s:49     .text:000000000000003c .L0 
     /tmp/ccgcmZUQ.s:50     .text:000000000000003c .L0 
     /tmp/ccgcmZUQ.s:52     .text:0000000000000040 .L0 
     /tmp/ccgcmZUQ.s:54     .text:0000000000000044 .L0 
     /tmp/ccgcmZUQ.s:71     .text:0000000000000044 main
     /tmp/ccgcmZUQ.s:74     .text:0000000000000044 .L0 
     /tmp/ccgcmZUQ.s:75     .text:0000000000000044 .L0 
     /tmp/ccgcmZUQ.s:76     .text:0000000000000048 .L0 
     /tmp/ccgcmZUQ.s:81     .text:0000000000000058 .L0 
     /tmp/ccgcmZUQ.s:82     .text:0000000000000058 .L0 
     /tmp/ccgcmZUQ.s:83     .text:0000000000000058 .L0 
     /tmp/ccgcmZUQ.s:84     .text:0000000000000058 .L0 
     /tmp/ccgcmZUQ.s:86     .text:000000000000005c .L0 
     /tmp/ccgcmZUQ.s:88     .text:000000000000005c .L0 
     /tmp/ccgcmZUQ.s:89     .text:000000000000005c .L0 
     /tmp/ccgcmZUQ.s:92     .text:0000000000000064 .L0 
     /tmp/ccgcmZUQ.s:93     .text:0000000000000064 .L0 
     /tmp/ccgcmZUQ.s:94     .text:0000000000000064 .L0 
     /tmp/ccgcmZUQ.s:101    .text:000000000000007c .L0 
     /tmp/ccgcmZUQ.s:102    .text:000000000000007c .L0 
     /tmp/ccgcmZUQ.s:105    .text:0000000000000088 .L0 
     /tmp/ccgcmZUQ.s:111    .text:0000000000000094 .L0 
     /tmp/ccgcmZUQ.s:112    .text:0000000000000094 .L0 
     /tmp/ccgcmZUQ.s:113    .text:0000000000000094 .L0 
     /tmp/ccgcmZUQ.s:119    .text:000000000000009c .L0 
     /tmp/ccgcmZUQ.s:120    .text:000000000000009c .L0 
     /tmp/ccgcmZUQ.s:124    .text:00000000000000ac .L0 
     /tmp/ccgcmZUQ.s:125    .text:00000000000000ac .L0 
     /tmp/ccgcmZUQ.s:131    .text:00000000000000bc .L0 
     /tmp/ccgcmZUQ.s:132    .text:00000000000000bc .L0 
     /tmp/ccgcmZUQ.s:139    .text:00000000000000d4 .L0 
     /tmp/ccgcmZUQ.s:140    .text:00000000000000d4 .L0 
     /tmp/ccgcmZUQ.s:144    .text:00000000000000e4 .L0 
     /tmp/ccgcmZUQ.s:145    .text:00000000000000e4 .L0 
     /tmp/ccgcmZUQ.s:149    .text:00000000000000f0 .L0 
     /tmp/ccgcmZUQ.s:150    .text:00000000000000f0 .L0 
     /tmp/ccgcmZUQ.s:156    .text:00000000000000f8 .L0 
  src/../h/riscv.hpp:123    .text:00000000000000f8 .L0 
GAS LISTING /tmp/ccgcmZUQ.s 			page 13


     /tmp/ccgcmZUQ.s:168    .text:00000000000000fc .L0 
     /tmp/ccgcmZUQ.s:169    .text:00000000000000fc .L0 
     /tmp/ccgcmZUQ.s:170    .text:00000000000000fc .L0 
     /tmp/ccgcmZUQ.s:181    .text:0000000000000104 .L0 
     /tmp/ccgcmZUQ.s:184    .text:0000000000000104 .L0 
     /tmp/ccgcmZUQ.s:185    .text:0000000000000104 .L0 
     /tmp/ccgcmZUQ.s:186    .text:0000000000000104 .L0 
     /tmp/ccgcmZUQ.s:191    .text:0000000000000108 .L0 
     /tmp/ccgcmZUQ.s:193    .text:000000000000010c .L0 
     /tmp/ccgcmZUQ.s:194    .text:000000000000010c .L0 
     /tmp/ccgcmZUQ.s:199    .text:0000000000000118 .L0 
     /tmp/ccgcmZUQ.s:200    .text:0000000000000118 .L0 
     /tmp/ccgcmZUQ.s:206    .text:0000000000000128 .L0 
     /tmp/ccgcmZUQ.s:207    .text:0000000000000128 .L0 
     /tmp/ccgcmZUQ.s:208    .text:0000000000000128 .L0 
     /tmp/ccgcmZUQ.s:218    .text:0000000000000130 .L0 
     /tmp/ccgcmZUQ.s:219    .text:0000000000000130 .L0 
     /tmp/ccgcmZUQ.s:224    .text:0000000000000134 .L0 
     /tmp/ccgcmZUQ.s:225    .text:0000000000000134 .L0 
     /tmp/ccgcmZUQ.s:227    .text:0000000000000138 .L0 
     /tmp/ccgcmZUQ.s:229    .text:000000000000013c .L0 
     /tmp/ccgcmZUQ.s:237    .text:0000000000000144 .L0 
     /tmp/ccgcmZUQ.s:238    .text:0000000000000144 .L0 
     /tmp/ccgcmZUQ.s:245    .text:0000000000000150 .L0 
     /tmp/ccgcmZUQ.s:246    .text:0000000000000154 .L0 
     /tmp/ccgcmZUQ.s:248    .text:0000000000000158 .L0 
     /tmp/ccgcmZUQ.s:249    .text:0000000000000158 .L0 
     /tmp/ccgcmZUQ.s:251    .text:000000000000015c .L0 
     /tmp/ccgcmZUQ.s:253    .text:0000000000000160 .L0 
     /tmp/ccgcmZUQ.s:255    .text:0000000000000164 .L0 
     /tmp/ccgcmZUQ.s:257    .text:0000000000000168 .L0 
     /tmp/ccgcmZUQ.s:267    .text:0000000000000168 .L0 
     /tmp/ccgcmZUQ.s:28     .text:0000000000000018 .L0 
     /tmp/ccgcmZUQ.s:102    .text:000000000000007c .L0 
     /tmp/ccgcmZUQ.s:105    .text:0000000000000088 .L0 
     /tmp/ccgcmZUQ.s:59     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccgcmZUQ.s:120    .text:000000000000009c .L0 
     /tmp/ccgcmZUQ.s:133    .text:00000000000000c0 .L0 
     /tmp/ccgcmZUQ.s:62     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccgcmZUQ.s:140    .text:00000000000000d4 .L0 
     /tmp/ccgcmZUQ.s:150    .text:00000000000000f0 .L0 
     /tmp/ccgcmZUQ.s:65     .rodata.str1.8:0000000000000038 .LC2
     /tmp/ccgcmZUQ.s:200    .text:0000000000000118 .L0 
     /tmp/ccgcmZUQ.s:197    .text:0000000000000118 .L4
     /tmp/ccgcmZUQ.s:177    .text:0000000000000104 .L5
     /tmp/ccgcmZUQ.s:241    .text:0000000000000150 .L3
     /tmp/ccgcmZUQ.s:231    .text:0000000000000144 .L7
     /tmp/ccgcmZUQ.s:1568   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccgcmZUQ.s:2811   .debug_str:00000000000007b5 .LASF148
     /tmp/ccgcmZUQ.s:2685   .debug_str:00000000000003c3 .LASF149
     /tmp/ccgcmZUQ.s:2605   .debug_str:000000000000016a .LASF150
     /tmp/ccgcmZUQ.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccgcmZUQ.s:260    .text:0000000000000168 .Letext0
     /tmp/ccgcmZUQ.s:2551   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccgcmZUQ.s:2717   .debug_str:00000000000004ef .LASF0
     /tmp/ccgcmZUQ.s:2735   .debug_str:0000000000000558 .LASF1
     /tmp/ccgcmZUQ.s:2699   .debug_str:0000000000000459 .LASF2
GAS LISTING /tmp/ccgcmZUQ.s 			page 14


     /tmp/ccgcmZUQ.s:2665   .debug_str:0000000000000337 .LASF4
     /tmp/ccgcmZUQ.s:2785   .debug_str:00000000000006df .LASF3
     /tmp/ccgcmZUQ.s:2575   .debug_str:000000000000008c .LASF5
     /tmp/ccgcmZUQ.s:2739   .debug_str:000000000000057e .LASF6
     /tmp/ccgcmZUQ.s:2715   .debug_str:00000000000004dc .LASF7
     /tmp/ccgcmZUQ.s:2831   .debug_str:00000000000008e4 .LASF8
     /tmp/ccgcmZUQ.s:2651   .debug_str:00000000000002cf .LASF9
     /tmp/ccgcmZUQ.s:2753   .debug_str:00000000000005d5 .LASF10
     /tmp/ccgcmZUQ.s:2817   .debug_str:000000000000088b .LASF11
     /tmp/ccgcmZUQ.s:2581   .debug_str:00000000000000aa .LASF12
     /tmp/ccgcmZUQ.s:2557   .debug_str:0000000000000011 .LASF13
     /tmp/ccgcmZUQ.s:2595   .debug_str:000000000000012e .LASF14
     /tmp/ccgcmZUQ.s:2773   .debug_str:000000000000067d .LASF15
     /tmp/ccgcmZUQ.s:2607   .debug_str:000000000000018d .LASF16
     /tmp/ccgcmZUQ.s:2731   .debug_str:0000000000000545 .LASF60
     /tmp/ccgcmZUQ.s:2611   .debug_str:00000000000001b7 .LASF151
     /tmp/ccgcmZUQ.s:2603   .debug_str:000000000000015e .LASF17
     /tmp/ccgcmZUQ.s:2687   .debug_str:00000000000003d0 .LASF18
     /tmp/ccgcmZUQ.s:2577   .debug_str:0000000000000093 .LASF19
     /tmp/ccgcmZUQ.s:2769   .debug_str:000000000000064c .LASF52
     /tmp/ccgcmZUQ.s:2857   .debug_str:00000000000009d5 .LASF54
     /tmp/ccgcmZUQ.s:2559   .debug_str:0000000000000021 .LASF20
     /tmp/ccgcmZUQ.s:2797   .debug_str:0000000000000732 .LASF22
     /tmp/ccgcmZUQ.s:2619   .debug_str:00000000000001e7 .LASF24
     /tmp/ccgcmZUQ.s:2617   .debug_str:00000000000001d2 .LASF26
     /tmp/ccgcmZUQ.s:2787   .debug_str:00000000000006f1 .LASF21
     /tmp/ccgcmZUQ.s:2759   .debug_str:0000000000000603 .LASF23
     /tmp/ccgcmZUQ.s:2809   .debug_str:00000000000007ae .LASF25
     /tmp/ccgcmZUQ.s:2801   .debug_str:000000000000075f .LASF27
     /tmp/ccgcmZUQ.s:2639   .debug_str:0000000000000267 .LASF28
     /tmp/ccgcmZUQ.s:2609   .debug_str:00000000000001a3 .LASF29
     /tmp/ccgcmZUQ.s:2555   .debug_str:0000000000000009 .LASF30
     /tmp/ccgcmZUQ.s:2657   .debug_str:00000000000002fb .LASF31
     /tmp/ccgcmZUQ.s:2625   .debug_str:0000000000000207 .LASF32
     /tmp/ccgcmZUQ.s:2585   .debug_str:00000000000000e9 .LASF33
     /tmp/ccgcmZUQ.s:2863   .debug_str:00000000000009ff .LASF34
     /tmp/ccgcmZUQ.s:2627   .debug_str:000000000000020f .LASF35
     /tmp/ccgcmZUQ.s:2719   .debug_str:00000000000004fc .LASF36
     /tmp/ccgcmZUQ.s:2851   .debug_str:0000000000000994 .LASF37
     /tmp/ccgcmZUQ.s:2569   .debug_str:000000000000005f .LASF38
     /tmp/ccgcmZUQ.s:2637   .debug_str:0000000000000254 .LASF39
     /tmp/ccgcmZUQ.s:2645   .debug_str:00000000000002a1 .LASF40
     /tmp/ccgcmZUQ.s:2807   .debug_str:000000000000079c .LASF41
     /tmp/ccgcmZUQ.s:2567   .debug_str:0000000000000059 .LASF42
     /tmp/ccgcmZUQ.s:2869   .debug_str:0000000000000a1f .LASF43
     /tmp/ccgcmZUQ.s:2861   .debug_str:00000000000009f4 .LASF44
     /tmp/ccgcmZUQ.s:2781   .debug_str:00000000000006c0 .LASF45
     /tmp/ccgcmZUQ.s:2675   .debug_str:0000000000000364 .LASF46
     /tmp/ccgcmZUQ.s:2799   .debug_str:0000000000000747 .LASF47
     /tmp/ccgcmZUQ.s:2593   .debug_str:0000000000000124 .LASF48
     /tmp/ccgcmZUQ.s:2659   .debug_str:000000000000030f .LASF49
     /tmp/ccgcmZUQ.s:2705   .debug_str:0000000000000486 .LASF50
     /tmp/ccgcmZUQ.s:2653   .debug_str:00000000000002dd .LASF51
     /tmp/ccgcmZUQ.s:2791   .debug_str:00000000000006ff .LASF53
     /tmp/ccgcmZUQ.s:2587   .debug_str:00000000000000fd .LASF55
     /tmp/ccgcmZUQ.s:2837   .debug_str:000000000000090a .LASF126
     /tmp/ccgcmZUQ.s:2681   .debug_str:0000000000000384 .LASF128
GAS LISTING /tmp/ccgcmZUQ.s 			page 15


     /tmp/ccgcmZUQ.s:2825   .debug_str:00000000000008bb .LASF59
     /tmp/ccgcmZUQ.s:2765   .debug_str:0000000000000631 .LASF56
     /tmp/ccgcmZUQ.s:2709   .debug_str:00000000000004aa .LASF57
     /tmp/ccgcmZUQ.s:2849   .debug_str:000000000000098f .LASF58
     /tmp/ccgcmZUQ.s:2695   .debug_str:000000000000042e .LASF61
     /tmp/ccgcmZUQ.s:2725   .debug_str:000000000000051c .LASF62
     /tmp/ccgcmZUQ.s:2815   .debug_str:0000000000000881 .LASF63
     /tmp/ccgcmZUQ.s:2833   .debug_str:00000000000008f4 .LASF64
     /tmp/ccgcmZUQ.s:2839   .debug_str:000000000000091f .LASF66
     /tmp/ccgcmZUQ.s:2757   .debug_str:00000000000005fa .LASF65
     /tmp/ccgcmZUQ.s:2649   .debug_str:00000000000002ae .LASF67
     /tmp/ccgcmZUQ.s:2745   .debug_str:00000000000005ac .LASF68
     /tmp/ccgcmZUQ.s:2711   .debug_str:00000000000004af .LASF69
     /tmp/ccgcmZUQ.s:2669   .debug_str:000000000000034f .LASF70
     /tmp/ccgcmZUQ.s:2641   .debug_str:000000000000026f .LASF71
     /tmp/ccgcmZUQ.s:2789   .debug_str:00000000000006f8 .LASF72
     /tmp/ccgcmZUQ.s:2843   .debug_str:0000000000000945 .LASF73
     /tmp/ccgcmZUQ.s:2623   .debug_str:00000000000001fd .LASF74
     /tmp/ccgcmZUQ.s:2855   .debug_str:00000000000009ac .LASF75
     /tmp/ccgcmZUQ.s:2663   .debug_str:000000000000032f .LASF76
     /tmp/ccgcmZUQ.s:2565   .debug_str:0000000000000051 .LASF77
     /tmp/ccgcmZUQ.s:2845   .debug_str:000000000000096f .LASF78
     /tmp/ccgcmZUQ.s:2777   .debug_str:0000000000000699 .LASF79
     /tmp/ccgcmZUQ.s:2723   .debug_str:000000000000050c .LASF80
     /tmp/ccgcmZUQ.s:2629   .debug_str:0000000000000223 .LASF81
     /tmp/ccgcmZUQ.s:2793   .debug_str:000000000000070e .LASF82
     /tmp/ccgcmZUQ.s:2667   .debug_str:000000000000033e .LASF83
     /tmp/ccgcmZUQ.s:2867   .debug_str:0000000000000a0c .LASF84
     /tmp/ccgcmZUQ.s:2713   .debug_str:00000000000004cb .LASF85
     /tmp/ccgcmZUQ.s:2823   .debug_str:00000000000008b2 .LASF86
     /tmp/ccgcmZUQ.s:2743   .debug_str:000000000000059c .LASF87
     /tmp/ccgcmZUQ.s:2741   .debug_str:0000000000000591 .LASF90
     /tmp/ccgcmZUQ.s:2697   .debug_str:000000000000043e .LASF92
     /tmp/ccgcmZUQ.s:2701   .debug_str:0000000000000467 .LASF88
     /tmp/ccgcmZUQ.s:2573   .debug_str:0000000000000071 .LASF89
     /tmp/ccgcmZUQ.s:2783   .debug_str:00000000000006d8 .LASF91
     /tmp/ccgcmZUQ.s:2755   .debug_str:00000000000005e4 .LASF93
     /tmp/ccgcmZUQ.s:2655   .debug_str:00000000000002f3 .LASF94
     /tmp/ccgcmZUQ.s:2747   .debug_str:00000000000005b1 .LASF95
     /tmp/ccgcmZUQ.s:2763   .debug_str:000000000000062c .LASF152
     /tmp/ccgcmZUQ.s:2813   .debug_str:0000000000000879 .LASF96
     /tmp/ccgcmZUQ.s:2691   .debug_str:00000000000003eb .LASF97
     /tmp/ccgcmZUQ.s:2819   .debug_str:000000000000089a .LASF98
     /tmp/ccgcmZUQ.s:2561   .debug_str:000000000000002a .LASF99
     /tmp/ccgcmZUQ.s:2633   .debug_str:0000000000000238 .LASF100
     /tmp/ccgcmZUQ.s:2767   .debug_str:0000000000000636 .LASF101
     /tmp/ccgcmZUQ.s:2647   .debug_str:00000000000002a7 .LASF102
     /tmp/ccgcmZUQ.s:2803   .debug_str:0000000000000772 .LASF103
     /tmp/ccgcmZUQ.s:2829   .debug_str:00000000000008db .LASF104
     /tmp/ccgcmZUQ.s:2827   .debug_str:00000000000008c3 .LASF105
     /tmp/ccgcmZUQ.s:2553   .debug_str:0000000000000000 .LASF106
     /tmp/ccgcmZUQ.s:2727   .debug_str:0000000000000525 .LASF107
     /tmp/ccgcmZUQ.s:2761   .debug_str:0000000000000616 .LASF108
     /tmp/ccgcmZUQ.s:2583   .debug_str:00000000000000ba .LASF109
     /tmp/ccgcmZUQ.s:2733   .debug_str:000000000000054b .LASF110
     /tmp/ccgcmZUQ.s:2771   .debug_str:0000000000000657 .LASF111
     /tmp/ccgcmZUQ.s:2613   .debug_str:00000000000001c6 .LASF112
GAS LISTING /tmp/ccgcmZUQ.s 			page 16


     /tmp/ccgcmZUQ.s:2795   .debug_str:000000000000071e .LASF113
     /tmp/ccgcmZUQ.s:2749   .debug_str:00000000000005c7 .LASF114
     /tmp/ccgcmZUQ.s:2847   .debug_str:000000000000097c .LASF115
     /tmp/ccgcmZUQ.s:2775   .debug_str:0000000000000693 .LASF116
     /tmp/ccgcmZUQ.s:2805   .debug_str:0000000000000788 .LASF117
     /tmp/ccgcmZUQ.s:2729   .debug_str:000000000000053d .LASF118
     /tmp/ccgcmZUQ.s:2591   .debug_str:000000000000011f .LASF119
     /tmp/ccgcmZUQ.s:2707   .debug_str:0000000000000490 .LASF120
     /tmp/ccgcmZUQ.s:2673   .debug_str:000000000000035f .LASF121
     /tmp/ccgcmZUQ.s:2597   .debug_str:000000000000013a .LASF122
     /tmp/ccgcmZUQ.s:2677   .debug_str:000000000000036f .LASF123
     /tmp/ccgcmZUQ.s:2671   .debug_str:0000000000000356 .LASF124
     /tmp/ccgcmZUQ.s:2841   .debug_str:0000000000000940 .LASF125
     /tmp/ccgcmZUQ.s:2689   .debug_str:00000000000003dd .LASF127
     /tmp/ccgcmZUQ.s:2683   .debug_str:00000000000003a6 .LASF129
     /tmp/ccgcmZUQ.s:2721   .debug_str:0000000000000503 .LASF130
     /tmp/ccgcmZUQ.s:2779   .debug_str:00000000000006a9 .LASF131
     /tmp/ccgcmZUQ.s:2601   .debug_str:0000000000000150 .LASF153
     /tmp/ccgcmZUQ.s:2693   .debug_str:0000000000000402 .LASF154
     /tmp/ccgcmZUQ.s:2579   .debug_str:000000000000009f .LASF155
     /tmp/ccgcmZUQ.s:2631   .debug_str:0000000000000233 .LASF132
     /tmp/ccgcmZUQ.s:72     .text:0000000000000044 .LFB43
     /tmp/ccgcmZUQ.s:258    .text:0000000000000168 .LFE43
     /tmp/ccgcmZUQ.s:2643   .debug_str:0000000000000299 .LASF156
     /tmp/ccgcmZUQ.s:2460   .debug_loc:0000000000000000 .LLST2
     /tmp/ccgcmZUQ.s:109    .text:0000000000000094 .LBB21
     /tmp/ccgcmZUQ.s:117    .text:000000000000009c .LBE21
     /tmp/ccgcmZUQ.s:2471   .debug_loc:0000000000000036 .LLST3
     /tmp/ccgcmZUQ.s:2479   .debug_loc:000000000000005a .LLST4
     /tmp/ccgcmZUQ.s:152    .text:00000000000000f8 .LBB23
     /tmp/ccgcmZUQ.s:164    .text:00000000000000fc .LBE23
     /tmp/ccgcmZUQ.s:166    .text:00000000000000fc .LBB25
     /tmp/ccgcmZUQ.s:179    .text:0000000000000104 .LBE25
     /tmp/ccgcmZUQ.s:2486   .debug_loc:000000000000007d .LLST5
     /tmp/ccgcmZUQ.s:182    .text:0000000000000104 .LBB27
     /tmp/ccgcmZUQ.s:189    .text:0000000000000108 .LBE27
     /tmp/ccgcmZUQ.s:2494   .debug_loc:00000000000000a1 .LLST6
     /tmp/ccgcmZUQ.s:204    .text:0000000000000128 .LBB29
     /tmp/ccgcmZUQ.s:216    .text:0000000000000130 .LBE29
     /tmp/ccgcmZUQ.s:2501   .debug_loc:00000000000000c4 .LLST7
     /tmp/ccgcmZUQ.s:221    .text:0000000000000134 .LBB31
     /tmp/ccgcmZUQ.s:233    .text:0000000000000144 .LBE31
     /tmp/ccgcmZUQ.s:2509   .debug_loc:00000000000000e8 .LLST8
     /tmp/ccgcmZUQ.s:230    .text:0000000000000144 .LVL23
     /tmp/ccgcmZUQ.s:234    .text:0000000000000144 .LBB33
     /tmp/ccgcmZUQ.s:243    .text:0000000000000150 .LBE33
     /tmp/ccgcmZUQ.s:2516   .debug_loc:000000000000010b .LLST9
     /tmp/ccgcmZUQ.s:240    .text:0000000000000150 .LVL24
     /tmp/ccgcmZUQ.s:90     .text:0000000000000064 .LVL4
     /tmp/ccgcmZUQ.s:98     .text:0000000000000078 .LVL5
     /tmp/ccgcmZUQ.s:122    .text:00000000000000ac .LVL8
     /tmp/ccgcmZUQ.s:127    .text:00000000000000b8 .LVL9
     /tmp/ccgcmZUQ.s:136    .text:00000000000000d0 .LVL12
     /tmp/ccgcmZUQ.s:142    .text:00000000000000e4 .LVL13
     /tmp/ccgcmZUQ.s:147    .text:00000000000000f0 .LVL14
     /tmp/ccgcmZUQ.s:195    .text:0000000000000114 .LVL19
     /tmp/ccgcmZUQ.s:202    .text:0000000000000128 .LVL20
GAS LISTING /tmp/ccgcmZUQ.s 			page 17


     /tmp/ccgcmZUQ.s:2621   .debug_str:00000000000001f0 .LASF133
     /tmp/ccgcmZUQ.s:2737   .debug_str:000000000000056b .LASF134
     /tmp/ccgcmZUQ.s:10     .text:0000000000000000 .LFB42
     /tmp/ccgcmZUQ.s:55     .text:0000000000000044 .LFE42
     /tmp/ccgcmZUQ.s:31     .text:0000000000000024 .LBB19
     /tmp/ccgcmZUQ.s:40     .text:000000000000002c .LBE19
     /tmp/ccgcmZUQ.s:2523   .debug_loc:000000000000012e .LLST0
     /tmp/ccgcmZUQ.s:2531   .debug_loc:0000000000000152 .LLST1
     /tmp/ccgcmZUQ.s:25     .text:0000000000000018 .LVL0
     /tmp/ccgcmZUQ.s:44     .text:0000000000000034 .LVL3
     /tmp/ccgcmZUQ.s:2853   .debug_str:00000000000009a7 .LASF135
     /tmp/ccgcmZUQ.s:2589   .debug_str:0000000000000119 .LASF136
     /tmp/ccgcmZUQ.s:2661   .debug_str:0000000000000325 .LASF137
     /tmp/ccgcmZUQ.s:2821   .debug_str:00000000000008a2 .LASF157
     /tmp/ccgcmZUQ.s:2865   .debug_str:0000000000000a07 .LASF138
     /tmp/ccgcmZUQ.s:2615   .debug_str:00000000000001cc .LASF139
     /tmp/ccgcmZUQ.s:2859   .debug_str:00000000000009ed .LASF158
     /tmp/ccgcmZUQ.s:2571   .debug_str:0000000000000066 .LASF140
     /tmp/ccgcmZUQ.s:2703   .debug_str:0000000000000473 .LASF141
     /tmp/ccgcmZUQ.s:2563   .debug_str:0000000000000045 .LASF142
     /tmp/ccgcmZUQ.s:2835   .debug_str:00000000000008fe .LASF143
     /tmp/ccgcmZUQ.s:2635   .debug_str:000000000000023f .LASF144
     /tmp/ccgcmZUQ.s:2599   .debug_str:0000000000000140 .LASF145
     /tmp/ccgcmZUQ.s:2679   .debug_str:0000000000000377 .LASF146
     /tmp/ccgcmZUQ.s:2751   .debug_str:00000000000005cc .LASF147
     /tmp/ccgcmZUQ.s:129    .text:00000000000000bc .LVL10
     /tmp/ccgcmZUQ.s:134    .text:00000000000000c8 .LVL11
     /tmp/ccgcmZUQ.s:108    .text:0000000000000094 .LVL6
     /tmp/ccgcmZUQ.s:115    .text:000000000000009c .LVL7
     /tmp/ccgcmZUQ.s:161    .text:00000000000000fc .LVL16
     /tmp/ccgcmZUQ.s:175    .text:0000000000000104 .LVL17
     /tmp/ccgcmZUQ.s:187    .text:0000000000000108 .LVL18
     /tmp/ccgcmZUQ.s:213    .text:0000000000000130 .LVL21
     /tmp/ccgcmZUQ.s:220    .text:0000000000000134 .LVL22
     /tmp/ccgcmZUQ.s:30     .text:0000000000000024 .LVL1
     /tmp/ccgcmZUQ.s:38     .text:000000000000002c .LVL2
     /tmp/ccgcmZUQ.s:268    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z8userMainv
_ZN7_thread7runningE
_ZN7_thread5yieldEv
_ZN15MemoryAllocator4initEv
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN7_thread4mainE
_Z11printStringPKc
__mem_alloc
_ZN7_thread5startEv
_ZN5Riscv14supervisorTrapEv
_Z15thread_dispatchv
_ZdaPv
__mem_free
